import{_ as n,o as s,c as a,a as t}from"./app.1f640783.js";const p={},e=t(`<h2 id="grpc" tabindex="-1"><a class="header-anchor" href="#grpc" aria-hidden="true">#</a> gRPC</h2><p>http://www.likecs.com/show-124458.html</p><h2 id="_1-26" tabindex="-1"><a class="header-anchor" href="#_1-26" aria-hidden="true">#</a> 1.26</h2><h3 id="grpc-\u670D\u52A1\u6CE8\u518C\u53D1\u73B0\u53CA\u8D1F\u8F7D\u5747\u8861\u7684\u5B9E\u73B0\u65B9\u6848\u4E0E\u6E90\u7801\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#grpc-\u670D\u52A1\u6CE8\u518C\u53D1\u73B0\u53CA\u8D1F\u8F7D\u5747\u8861\u7684\u5B9E\u73B0\u65B9\u6848\u4E0E\u6E90\u7801\u89E3\u6790" aria-hidden="true">#</a> gRPC \u670D\u52A1\u6CE8\u518C\u53D1\u73B0\u53CA\u8D1F\u8F7D\u5747\u8861\u7684\u5B9E\u73B0\u65B9\u6848\u4E0E\u6E90\u7801\u89E3\u6790</h3><p>https://blog.csdn.net/kevin_tech/article/details/109281835</p><h3 id="roundrobin" tabindex="-1"><a class="header-anchor" href="#roundrobin" aria-hidden="true">#</a> RoundRobin</h3><p>grpc client \u7AEF\u521B\u5EFA\u8FDE\u63A5\u65F6\u53EF\u4EE5\u7528 WithBalancer \u6765\u6307\u5B9A\u8D1F\u8F7D\u5747\u8861\u7EC4\u4EF6\uFF0C\u8FD9\u91CC\u7814\u7A76\u4E0B grpc \u81EA\u5E26\u7684 RoundRobin\uFF08\u8F6E\u8BE2\u8C03\u5EA6\uFF09\u7684\u5B9E\u73B0\u3002\u6E90\u7801\u5728 google.golang.org/grpc/balancer.go \u4E2D\u3002</p><p>roundRobin \u7ED3\u6784\u4F53\u5B9A\u4E49\u5982\u4E0B\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>type roundRobin struct {
	r      naming.Resolver
	w      naming.Watcher
	addrs  []*addrInfo
	mu     sync.Mutex
	addrCh chan []Address
	next   int
	waitCh chan struct{}
	done   bool
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>r \u662F\u547D\u540D\u89E3\u6790\u5668\uFF0C\u53EF\u4EE5\u5B9A\u4E49\u81EA\u5DF1\u7684\u547D\u540D\u89E3\u6790\u5668\uFF0C\u5982 etcd \u547D\u540D\u89E3\u6790\u5668\u3002\u5982\u679C r \u4E3A nil\uFF0C\u90A3\u4E48 Dial \u4E2D\u53C2\u6570 target \u5C06\u76F4\u63A5\u4F5C\u4E3A\u53EF\u8BF7\u6C42\u5730\u5740\u6DFB\u52A0\u5230 addrs \u4E2D\u3002</li><li>w \u662F\u547D\u540D\u89E3\u6790\u5668 Resolve \u65B9\u6CD5\u8FD4\u56DE\u7684 watcher\uFF0C\u8BE5 watcher \u53EF\u4EE5\u76D1\u542C\u547D\u540D\u89E3\u6790\u5668\u53D1\u6765\u7684\u5730\u5740\u4FE1\u606F\u53D8\u5316\uFF0C\u901A\u77E5 roundRobin \u5BF9 addrs \u4E2D\u7684\u5730\u5740\u8FDB\u884C\u52A8\u6001\u7684\u589E\u5220\u3002</li><li>addrs \u662F\u4ECE\u547D\u540D\u89E3\u6790\u5668\u83B7\u53D6\u5730\u5740\u4FE1\u606F\u6570\u7EC4\uFF0C\u6570\u7EC4\u4E2D\u6BCF\u4E2A\u5730\u5740\u4E0D\u4EC5\u6709\u5730\u5740\u4FE1\u606F\uFF0C\u8FD8\u6709 grpc \u4E0E\u8BE5\u5730\u5740\u662F\u5426\u5DF2\u7ECF\u521B\u5EFA\u4E86 ready \u72B6\u6001\u7684\u8FDE\u63A5\u3002</li><li>addrCh \u662F\u5730\u5740\u6570\u7EC4\u7684 channel\uFF0C\u8BE5 channel \u4F1A\u5728\u6BCF\u6B21\u547D\u540D\u89E3\u6790\u5668\u53D1\u6765\u5730\u5740\u4FE1\u606F\u53D8\u5316\u540E\uFF0C\u5C06\u6240\u6709 addrs \u901A\u77E5\u5230 grpc \u5185\u90E8\u7684 lbWatcher\uFF0ClbWatcher \u662F\u7EDF\u4E00\u7BA1\u7406\u5730\u5740\u8FDE\u63A5\u72B6\u6001\u7684\u534F\u7A0B\uFF0C\u8D1F\u8D23\u65B0\u5730\u5740\u7684\u8FDE\u63A5\u4E0E\u88AB\u5220\u9664\u5730\u5740\u7684\u5173\u95ED\u64CD\u4F5C\u3002</li><li>next \u662F roundRobin \u7684 Index\uFF0C\u5373\u8F6E\u8BE2\u8C03\u5EA6\u904D\u5386\u5230 addrs \u6570\u7EC4\u4E2D\u7684\u54EA\u4E2A\u4F4D\u7F6E\u4E86\u3002</li><li>waitCh \u662F\u5F53 addrs \u4E2D\u5730\u5740\u4E3A\u7A7A\u65F6\uFF0Cgrpc \u8C03\u7528 Get()\u65B9\u6CD5\u5E0C\u671B\u83B7\u53D6\u5230\u4E00\u4E2A\u5230 target \u7684\u8FDE\u63A5\uFF0C\u5982\u679C\u8BBE\u7F6E\u4E86 grpc \u7684 failfast \u4E3A false\uFF0C\u90A3\u4E48 Get()\u65B9\u6CD5\u4F1A\u963B\u585E\u5728\u6B64 channel \u4E0A\uFF0C\u76F4\u5230\u6709 ready \u7684\u8FDE\u63A5\u3002</li></ul><h4 id="roundrobin-\u542F\u52A8" tabindex="-1"><a class="header-anchor" href="#roundrobin-\u542F\u52A8" aria-hidden="true">#</a> roundRobin \u542F\u52A8</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>rr <span class="token operator">*</span>roundRobin<span class="token punctuation">)</span> <span class="token function">Start</span><span class="token punctuation">(</span>target <span class="token builtin">string</span><span class="token punctuation">,</span> config BalancerConfig<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
rr<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">defer</span> rr<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> rr<span class="token punctuation">.</span>done <span class="token punctuation">{</span>
<span class="token keyword">return</span> ErrClientConnClosing
<span class="token punctuation">}</span>
<span class="token keyword">if</span> rr<span class="token punctuation">.</span>r <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
<span class="token comment">// \u5982\u679C\u6CA1\u6709\u89E3\u6790\u5668\uFF0C\u90A3\u4E48\u76F4\u63A5\u5C06target\u52A0\u5165addrs\u5730\u5740\u6570\u7EC4</span>
rr<span class="token punctuation">.</span>addrs <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>rr<span class="token punctuation">.</span>addrs<span class="token punctuation">,</span> <span class="token operator">&amp;</span>addrInfo<span class="token punctuation">{</span>addr<span class="token punctuation">:</span> Address<span class="token punctuation">{</span>Addr<span class="token punctuation">:</span> target<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
<span class="token comment">// Resolve\u63A5\u53E3\u4F1A\u8FD4\u56DE\u4E00\u4E2Awatcher\uFF0Cwatcher\u53EF\u4EE5\u76D1\u542C\u89E3\u6790\u5668\u7684\u5730\u5740\u53D8\u5316</span>
w<span class="token punctuation">,</span> err <span class="token operator">:=</span> rr<span class="token punctuation">.</span>r<span class="token punctuation">.</span><span class="token function">Resolve</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
<span class="token keyword">return</span> err
<span class="token punctuation">}</span>
rr<span class="token punctuation">.</span>w <span class="token operator">=</span> w
<span class="token comment">// \u521B\u5EFA\u4E00\u4E2Achannel\uFF0C\u5F53watcher\u76D1\u542C\u5230\u5730\u5740\u53D8\u5316\u65F6\uFF0C\u901A\u77E5grpc\u5185\u90E8lbWatcher\u53BB\u8FDE\u63A5\u8BE5\u5730\u5740</span>
rr<span class="token punctuation">.</span>addrCh <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>Address<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token comment">// go \u51FA\u53BB\u76D1\u542Cwatcher\uFF0C\u76D1\u542C\u5730\u5740\u53D8\u5316\u3002</span>
<span class="token keyword">go</span> <span class="token keyword">func</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">for</span> <span class="token punctuation">{</span>
<span class="token keyword">if</span> err <span class="token operator">:=</span> rr<span class="token punctuation">.</span><span class="token function">watchAddrUpdates</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
<span class="token keyword">return</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u76D1\u542C\u547D\u540D\u89E3\u6790\u5668\u7684\u5730\u5740\u53D8\u5316" tabindex="-1"><a class="header-anchor" href="#\u76D1\u542C\u547D\u540D\u89E3\u6790\u5668\u7684\u5730\u5740\u53D8\u5316" aria-hidden="true">#</a> \u76D1\u542C\u547D\u540D\u89E3\u6790\u5668\u7684\u5730\u5740\u53D8\u5316\uFF1A</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>rr <span class="token operator">*</span>roundRobin<span class="token punctuation">)</span> <span class="token function">watchAddrUpdates</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
<span class="token comment">// watcher\u7684next\u65B9\u6CD5\u4F1A\u963B\u585E\uFF0C\u76F4\u81F3\u6709\u5730\u5740\u53D8\u5316\u4FE1\u606F\u8FC7\u6765\uFF0Cupdates\u5373\u4E3A\u53D8\u5316\u4FE1\u606F</span>
updates<span class="token punctuation">,</span> err <span class="token operator">:=</span> rr<span class="token punctuation">.</span>w<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
<span class="token keyword">return</span> err
<span class="token punctuation">}</span>
<span class="token comment">// \u5BF9\u4E8Eaddrs\u5730\u5740\u6570\u7EC4\u7684\u64CD\u4F5C\uFF0C\u663E\u7136\u662F\u8981\u52A0\u9501\u7684\uFF0C\u56E0\u4E3A\u6709\u591A\u4E2Agoroutine\u5728\u540C\u65F6\u64CD\u4F5C</span>
rr<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">defer</span> rr<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> update <span class="token operator">:=</span> <span class="token keyword">range</span> updates <span class="token punctuation">{</span>
addr <span class="token operator">:=</span> Address<span class="token punctuation">{</span>
Addr<span class="token punctuation">:</span>     update<span class="token punctuation">.</span>Addr<span class="token punctuation">,</span>
Metadata<span class="token punctuation">:</span> update<span class="token punctuation">.</span>Metadata<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">switch</span> update<span class="token punctuation">.</span>Op <span class="token punctuation">{</span>
<span class="token keyword">case</span> naming<span class="token punctuation">.</span>Add<span class="token punctuation">:</span>
<span class="token comment">//\u5BF9\u4E8E\u65B0\u589E\u7C7B\u578B\u7684\u5730\u5740\uFF0C\u6CE8\u610F\u8FD9\u91CC\u4E0D\u4F1A\u91CD\u590D\u6DFB\u52A0\u3002</span>
<span class="token keyword">var</span> exist <span class="token builtin">bool</span>
<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> rr<span class="token punctuation">.</span>addrs <span class="token punctuation">{</span>
<span class="token keyword">if</span> addr <span class="token operator">==</span> v<span class="token punctuation">.</span>addr <span class="token punctuation">{</span>
exist <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token keyword">break</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> exist <span class="token punctuation">{</span>
<span class="token keyword">continue</span>
<span class="token punctuation">}</span>
rr<span class="token punctuation">.</span>addrs <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>rr<span class="token punctuation">.</span>addrs<span class="token punctuation">,</span> <span class="token operator">&amp;</span>addrInfo<span class="token punctuation">{</span>addr<span class="token punctuation">:</span> addr<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">case</span> naming<span class="token punctuation">.</span>Delete<span class="token punctuation">:</span>
<span class="token comment">//\u5BF9\u4E8E\u5220\u9664\u7684\u5730\u5740\uFF0C\u76F4\u63A5\u5728addrs\u4E2D\u5220\u9664\u5C31\u884C\u4E86</span>
<span class="token keyword">for</span> i<span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> rr<span class="token punctuation">.</span>addrs <span class="token punctuation">{</span>
<span class="token keyword">if</span> addr <span class="token operator">==</span> v<span class="token punctuation">.</span>addr <span class="token punctuation">{</span>
<span class="token function">copy</span><span class="token punctuation">(</span>rr<span class="token punctuation">.</span>addrs<span class="token punctuation">[</span>i<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> rr<span class="token punctuation">.</span>addrs<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
rr<span class="token punctuation">.</span>addrs <span class="token operator">=</span> rr<span class="token punctuation">.</span>addrs<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token function">len</span><span class="token punctuation">(</span>rr<span class="token punctuation">.</span>addrs<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token keyword">break</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">default</span><span class="token punctuation">:</span>
grpclog<span class="token punctuation">.</span><span class="token function">Errorln</span><span class="token punctuation">(</span><span class="token string">&quot;Unknown update.Op &quot;</span><span class="token punctuation">,</span> update<span class="token punctuation">.</span>Op<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u8FD9\u91CC\u590D\u5236\u4E86\u6574\u4E2Aaddrs\u5730\u5740\u6570\u7EC4\uFF0C\u7136\u540E\u4E22\u5230addrCh channel\u4E2D\u901A\u77E5grpc\u5185\u90E8lbWatcher\uFF0C</span>
<span class="token comment">// lbWatcher\u4F1A\u5173\u95ED\u5220\u9664\u7684\u5730\u5740\uFF0C\u8FDE\u63A5\u65B0\u589E\u7684\u5730\u5740\u3002</span>
<span class="token comment">// \u8FDE\u63A5ready\u540E\u4F1A\u6709\u4E13\u95E8\u7684goroutine\u8C03\u7528Up\u65B9\u6CD5\u4FEE\u6539addrs\u4E2D\u5730\u5740\u7684\u72B6\u6001\u3002</span>
open <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>Address<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>rr<span class="token punctuation">.</span>addrs<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> i<span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> rr<span class="token punctuation">.</span>addrs <span class="token punctuation">{</span>
open<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> v<span class="token punctuation">.</span>addr
<span class="token punctuation">}</span>
<span class="token keyword">if</span> rr<span class="token punctuation">.</span>done <span class="token punctuation">{</span>
<span class="token keyword">return</span> ErrClientConnClosing
<span class="token punctuation">}</span>
<span class="token keyword">select</span> <span class="token punctuation">{</span>
<span class="token keyword">case</span> <span class="token operator">&lt;-</span>rr<span class="token punctuation">.</span>addrCh<span class="token punctuation">:</span>
<span class="token keyword">default</span><span class="token punctuation">:</span>
<span class="token punctuation">}</span>
rr<span class="token punctuation">.</span>addrCh <span class="token operator">&lt;-</span> open
<span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="up-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#up-\u65B9\u6CD5" aria-hidden="true">#</a> Up \u65B9\u6CD5\uFF1A</h4><p>up \u65B9\u6CD5\u662F grpc \u5185\u90E8\u8D1F\u8F7D\u5747\u8861 watcher \u8C03\u7528\u7684\uFF0C\u8BE5 watcher \u4F1A\u8BFB\u5168\u5C40\u7684\u8FDE\u63A5\u72B6\u6001\u6539\u53D8\u961F\u5217\uFF0C\u5982\u679C\u662F ready \u72B6\u6001\u7684\u8FDE\u63A5\uFF0C\u4F1A\u8C03\u7528 up \u65B9\u6CD5\u6765\u6539\u53D8 addrs \u5730\u5740\u6570\u7EC4\u4E2D\u8BE5\u5730\u5740\u7684\u72B6\u6001\u4E3A<strong>\u5DF2\u8FDE\u63A5</strong>\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>rr <span class="token operator">*</span>roundRobin<span class="token punctuation">)</span> <span class="token function">Up</span><span class="token punctuation">(</span>addr Address<span class="token punctuation">)</span> <span class="token keyword">func</span> <span class="token punctuation">(</span><span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
rr<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">defer</span> rr<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> cnt <span class="token builtin">int</span>
<span class="token comment">//\u5C06\u5730\u5740\u6570\u7EC4\u4E2D\u7684addr\u7F6E\u4E3A\u5DF2\u8FDE\u63A5\u72B6\u6001\uFF0C\u8FD9\u6837\u8FD9\u4E2A\u5730\u5740\u5C31\u53EF\u4EE5\u88ABclient\u4F7F\u7528\u4E86\u3002</span>
<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> a <span class="token operator">:=</span> <span class="token keyword">range</span> rr<span class="token punctuation">.</span>addrs <span class="token punctuation">{</span>
<span class="token keyword">if</span> a<span class="token punctuation">.</span>addr <span class="token operator">==</span> addr <span class="token punctuation">{</span>
<span class="token keyword">if</span> a<span class="token punctuation">.</span>connected <span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
a<span class="token punctuation">.</span>connected <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> a<span class="token punctuation">.</span>connected <span class="token punctuation">{</span>
cnt<span class="token operator">++</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5F53\u6709\u4E00\u4E2A\u53EF\u7528\u5730\u5740\u65F6\uFF0C\u4E4B\u524D\u53EF\u80FD\u662F0\u4E2A\uFF0C\u53EF\u80FD\u8981\u5F88\u591Aclient\u963B\u585E\u5728\u83B7\u53D6\u8FDE\u63A5\u5730\u5740\u4E0A\uFF0C\u8FD9\u91CC\u901A\u77E5\u6240\u6709\u7684client\u6709\u53EF\u7528\u8FDE\u63A5\u5566\u3002</span>
<span class="token comment">// \u4E3A\u4EC0\u4E48\u53EA\u7B49\u4E8E1\u65F6\u901A\u77E5\uFF1F\u56E0\u4E3A\u53EF\u7528\u5730\u5740\u6570\u91CF&gt;1\u65F6\uFF0Cclient\u662F\u4E0D\u4F1A\u963B\u585E\u7684\u3002</span>
<span class="token keyword">if</span> cnt <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> rr<span class="token punctuation">.</span>waitCh <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
<span class="token function">close</span><span class="token punctuation">(</span>rr<span class="token punctuation">.</span>waitCh<span class="token punctuation">)</span>
rr<span class="token punctuation">.</span>waitCh <span class="token operator">=</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u8FD4\u56DE\u7981\u7528\u8BE5\u5730\u5740\u7684\u65B9\u6CD5</span>
<span class="token keyword">return</span> <span class="token keyword">func</span> <span class="token punctuation">(</span>err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
rr<span class="token punctuation">.</span><span class="token function">down</span><span class="token punctuation">(</span>addr<span class="token punctuation">,</span> err<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="down-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#down-\u65B9\u6CD5" aria-hidden="true">#</a> down \u65B9\u6CD5\uFF1A</h4><p>down \u65B9\u6CD5\u5C31\u7B80\u5355\u4E86, \u76F4\u63A5\u627E\u5230 addr \u7F6E\u4E3A\u4E0D\u53EF\u7528\u5C31\u884C\u4E86\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">//\u5982\u679Caddr1\u5DF2\u7ECF\u88AB\u8FDE\u63A5\u4E0A\u4E86\uFF0C\u4F46\u662Fresolver\u901A\u77E5\u5220\u9664\u4E86\uFF0Cgrpc\u5185\u90E8\u5982\u4F55\u5904\u7406\u5173\u95ED\u7684\u903B\u8F91\uFF1F</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>rr <span class="token operator">*</span>roundRobin<span class="token punctuation">)</span> <span class="token function">down</span><span class="token punctuation">(</span>addr Address<span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
rr<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">defer</span> rr<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> a <span class="token operator">:=</span> <span class="token keyword">range</span> rr<span class="token punctuation">.</span>addrs <span class="token punctuation">{</span>
<span class="token keyword">if</span> addr <span class="token operator">==</span> a<span class="token punctuation">.</span>addr <span class="token punctuation">{</span>
a<span class="token punctuation">.</span>connected <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token keyword">break</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="get-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#get-\u65B9\u6CD5" aria-hidden="true">#</a> Get()\u65B9\u6CD5\uFF1A</h4><p>client \u9700\u8981\u83B7\u53D6\u4E00\u4E2A\u53EF\u7528\u7684\u5730\u5740\uFF0C\u5982\u679C addrs \u4E3A\u7A7A\uFF0C\u6216\u8005 addrs \u4E0D\u4E3A\u7A7A\uFF0C\u4F46\u662F\u5730\u5740\u90FD\u4E0D\u53EF\u7528\uFF08\u6CA1\u8FDE\u63A5\uFF09\uFF0CGet()\u65B9\u6CD5\u4F1A\u8FD4\u56DE\u9519\u8BEF\u3002\u4F46\u662F\u5982\u679C\u8BBE\u7F6E\u4E86 failfast = false\uFF0CGet()\u65B9\u6CD5\u4F1A\u963B\u585E\u5728 waitCh channel \u4E0A\uFF0C\u76F4\u81F3 Up \u65B9\u6CD5\u7ED9\u5230\u901A\u77E5\uFF0C\u7136\u540E\u8F6E\u8BE2\u8C03\u5EA6\u53EF\u7528\u7684\u5730\u5740\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>rr <span class="token operator">*</span>roundRobin<span class="token punctuation">)</span> <span class="token function">Get</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> opts BalancerGetOptions<span class="token punctuation">)</span> <span class="token punctuation">(</span>addr Address<span class="token punctuation">,</span> put <span class="token keyword">func</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">var</span> ch <span class="token keyword">chan</span> <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
rr<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> rr<span class="token punctuation">.</span>done <span class="token punctuation">{</span>
rr<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
err <span class="token operator">=</span> ErrClientConnClosing
<span class="token keyword">return</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>rr<span class="token punctuation">.</span>addrs<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
<span class="token comment">// addrs\u7684\u957F\u5EA6\u53EF\u80FD\u53D8\u5316\uFF0C\u5982\u679Cnext\u503C\u8D85\u51FA\u4E86\uFF0C\u5C31\u7F6E\u4E3A0\uFF0C\u4ECE\u5934\u5F00\u59CB\u8C03\u5EA6\u3002</span>
<span class="token keyword">if</span> rr<span class="token punctuation">.</span>next <span class="token operator">&gt;=</span> <span class="token function">len</span><span class="token punctuation">(</span>rr<span class="token punctuation">.</span>addrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
rr<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
next <span class="token operator">:=</span> rr<span class="token punctuation">.</span>next
<span class="token comment">//\u904D\u5386\u6574\u4E2Aaddrs\u6570\u7EC4\uFF0C\u76F4\u5230\u9009\u51FA\u4E00\u4E2A\u53EF\u7528\u7684\u5730\u5740</span>
<span class="token keyword">for</span> <span class="token punctuation">{</span>
a <span class="token operator">:=</span> rr<span class="token punctuation">.</span>addrs<span class="token punctuation">[</span>next<span class="token punctuation">]</span>
<span class="token comment">// next\u503C\u52A0\u4E00\uFF0C\u5F53\u7136\u662F\u5FAA\u73AF\u7684\uFF0C\u5230len(addrs)\u540E\uFF0C\u53D8\u4E3A0</span>
next <span class="token operator">=</span> <span class="token punctuation">(</span>next <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token function">len</span><span class="token punctuation">(</span>rr<span class="token punctuation">.</span>addrs<span class="token punctuation">)</span>
<span class="token keyword">if</span> a<span class="token punctuation">.</span>connected <span class="token punctuation">{</span>
addr <span class="token operator">=</span> a<span class="token punctuation">.</span>addr
rr<span class="token punctuation">.</span>next <span class="token operator">=</span> next
rr<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">return</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> next <span class="token operator">==</span> rr<span class="token punctuation">.</span>next <span class="token punctuation">{</span>
<span class="token comment">// \u904D\u5386\u5B8C\u4E00\u5708\u4E86\uFF0C\u8FD8\u6CA1\u627E\u5230\uFF0C\u8D70\u4E0B\u9762\u903B\u8F91</span>
<span class="token keyword">break</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token operator">!</span>opts<span class="token punctuation">.</span>BlockingWait <span class="token punctuation">{</span> <span class="token comment">//\u5982\u679C\u662F\u975E\u963B\u585E\u6A21\u5F0F\uFF0C\u5982\u679C\u6CA1\u6709\u53EF\u7528\u5730\u5740\uFF0C\u90A3\u4E48\u62A5\u9519</span>
<span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>rr<span class="token punctuation">.</span>addrs<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
rr<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
err <span class="token operator">=</span> status<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>Unavailable<span class="token punctuation">,</span> <span class="token string">&quot;there is no address available&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">return</span>
<span class="token punctuation">}</span>
<span class="token comment">// Returns the next addr on rr.addrs for failfast RPCs.</span>
addr <span class="token operator">=</span> rr<span class="token punctuation">.</span>addrs<span class="token punctuation">[</span>rr<span class="token punctuation">.</span>next<span class="token punctuation">]</span><span class="token punctuation">.</span>addr
rr<span class="token punctuation">.</span>next<span class="token operator">++</span>
rr<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">return</span>
<span class="token punctuation">}</span>
<span class="token comment">// Wait on rr.waitCh for non-failfast RPCs.</span>
<span class="token comment">// \u5982\u679C\u662F\u963B\u585E\u6A21\u5F0F\uFF0C\u90A3\u4E48\u9700\u8981\u963B\u585E\u5728waitCh\u4E0A\uFF0C\u76F4\u5230Up\u65B9\u6CD5\u7ED9\u901A\u77E5</span>
<span class="token keyword">if</span> rr<span class="token punctuation">.</span>waitCh <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
ch <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
rr<span class="token punctuation">.</span>waitCh <span class="token operator">=</span> ch
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
ch <span class="token operator">=</span> rr<span class="token punctuation">.</span>waitCh
<span class="token punctuation">}</span>
rr<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token punctuation">{</span>
<span class="token keyword">select</span> <span class="token punctuation">{</span>
<span class="token keyword">case</span> <span class="token operator">&lt;-</span>ctx<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
err <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">Err</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">return</span>
<span class="token keyword">case</span> <span class="token operator">&lt;-</span>ch<span class="token punctuation">:</span>
rr<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> rr<span class="token punctuation">.</span>done <span class="token punctuation">{</span>
rr<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
err <span class="token operator">=</span> ErrClientConnClosing
<span class="token keyword">return</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>rr<span class="token punctuation">.</span>addrs<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
<span class="token keyword">if</span> rr<span class="token punctuation">.</span>next <span class="token operator">&gt;=</span> <span class="token function">len</span><span class="token punctuation">(</span>rr<span class="token punctuation">.</span>addrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
rr<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
next <span class="token operator">:=</span> rr<span class="token punctuation">.</span>next
<span class="token keyword">for</span> <span class="token punctuation">{</span>
a <span class="token operator">:=</span> rr<span class="token punctuation">.</span>addrs<span class="token punctuation">[</span>next<span class="token punctuation">]</span>
next <span class="token operator">=</span> <span class="token punctuation">(</span>next <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token function">len</span><span class="token punctuation">(</span>rr<span class="token punctuation">.</span>addrs<span class="token punctuation">)</span>
<span class="token keyword">if</span> a<span class="token punctuation">.</span>connected <span class="token punctuation">{</span>
addr <span class="token operator">=</span> a<span class="token punctuation">.</span>addr
rr<span class="token punctuation">.</span>next <span class="token operator">=</span> next
rr<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">return</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> next <span class="token operator">==</span> rr<span class="token punctuation">.</span>next <span class="token punctuation">{</span>
<span class="token comment">// \u904D\u5386\u5B8C\u4E00\u5708\u4E86\uFF0C\u8FD8\u6CA1\u627E\u5230\uFF0C\u53EF\u80FD\u521AUp\u7684\u5730\u5740\u88ABdown\u6389\u4E86\uFF0C\u91CD\u65B0\u7B49\u5F85\u3002</span>
<span class="token keyword">break</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// The newly added addr got removed by Down() again.</span>
<span class="token keyword">if</span> rr<span class="token punctuation">.</span>waitCh <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
ch <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
rr<span class="token punctuation">.</span>waitCh <span class="token operator">=</span> ch
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
ch <span class="token operator">=</span> rr<span class="token punctuation">.</span>waitCh
<span class="token punctuation">}</span>
rr<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="lbwatcher" tabindex="-1"><a class="header-anchor" href="#lbwatcher" aria-hidden="true">#</a> lbWatcher\uFF1A</h4><p>lbWatcher \u4F1A\u76D1\u542C\u5730\u5740\u53D8\u5316\u4FE1\u606F\uFF0Croundroubin \u6BCF\u6B21\u6709\u5730\u5740\u53D8\u5316\u65F6\uFF0C\u4F1A\u5C06\u6240\u6709\u7684\u5730\u5740\u901A\u77E5\u7ED9 lbWatcher\uFF0ClbWatcher \u672C\u8EAB\u7EF4\u62A4\u4E86\u5730\u5740\u8FDE\u63A5\u7684 map \u8868\uFF0C\u4F1A\u627E\u51FA\u65B0\u6DFB\u52A0\u7684\u5730\u5740\u548C\u9700\u8981\u5220\u9664\u7684\u5730\u5740\uFF0C\u7136\u540E\u505A\u8FDE\u63A5\u3001\u5173\u95ED\u64CD\u4F5C\uFF0C\u518D\u8C03\u7528 roundRobin \u7684 Up/Down \u65B9\u6CD5\u901A\u77E5\u8FDE\u63A5\u7684\u72B6\u6001\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>bw <span class="token operator">*</span>balancerWrapper<span class="token punctuation">)</span> <span class="token function">lbWatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
notifyCh <span class="token operator">:=</span> bw<span class="token punctuation">.</span>balancer<span class="token punctuation">.</span><span class="token function">Notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> notifyCh <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
<span class="token comment">// \u6CA1\u6709\u5B9A\u4E49\u89E3\u6790\u5668\uFF0C\u76F4\u63A5\u8FDE\u63A5\u8FD9\u4E2A\u5730\u5740\u3002</span>
a <span class="token operator">:=</span> resolver<span class="token punctuation">.</span>Address<span class="token punctuation">{</span>
Addr<span class="token punctuation">:</span> bw<span class="token punctuation">.</span>targetAddr<span class="token punctuation">,</span>
Type<span class="token punctuation">:</span> resolver<span class="token punctuation">.</span>Backend<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
sc<span class="token punctuation">,</span> err <span class="token operator">:=</span> bw<span class="token punctuation">.</span>cc<span class="token punctuation">.</span><span class="token function">NewSubConn</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>resolver<span class="token punctuation">.</span>Address<span class="token punctuation">{</span>a<span class="token punctuation">}</span><span class="token punctuation">,</span> balancer<span class="token punctuation">.</span>NewSubConnOptions<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
grpclog<span class="token punctuation">.</span><span class="token function">Warningf</span><span class="token punctuation">(</span><span class="token string">&quot;Error creating connection to %v. Err: %v&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> err<span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
bw<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
bw<span class="token punctuation">.</span>conns<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">=</span> sc
bw<span class="token punctuation">.</span>connSt<span class="token punctuation">[</span>sc<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>scState<span class="token punctuation">{</span>
addr<span class="token punctuation">:</span> Address<span class="token punctuation">{</span>Addr<span class="token punctuation">:</span> bw<span class="token punctuation">.</span>targetAddr<span class="token punctuation">}</span><span class="token punctuation">,</span>
s<span class="token punctuation">:</span>    connectivity<span class="token punctuation">.</span>Idle<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
bw<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
sc<span class="token punctuation">.</span><span class="token function">Connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> addrs <span class="token operator">:=</span> <span class="token keyword">range</span> notifyCh <span class="token punctuation">{</span>
<span class="token keyword">var</span> newAddrs <span class="token punctuation">[</span><span class="token punctuation">]</span>resolver<span class="token punctuation">.</span>Address
<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> a <span class="token operator">:=</span> <span class="token keyword">range</span> addrs <span class="token punctuation">{</span>
newAddr <span class="token operator">:=</span> resolver<span class="token punctuation">.</span>Address<span class="token punctuation">{</span>
Addr<span class="token punctuation">:</span>       a<span class="token punctuation">.</span>Addr<span class="token punctuation">,</span>
Type<span class="token punctuation">:</span>       resolver<span class="token punctuation">.</span>Backend<span class="token punctuation">,</span> <span class="token comment">// All addresses from balancer are all backends.</span>
ServerName<span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
Metadata<span class="token punctuation">:</span>   a<span class="token punctuation">.</span>Metadata<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
newAddrs <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>newAddrs<span class="token punctuation">,</span> newAddr<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> <span class="token punctuation">(</span>
add <span class="token punctuation">[</span><span class="token punctuation">]</span>resolver<span class="token punctuation">.</span>Address <span class="token comment">// Addresses need to setup connections.</span>
del <span class="token punctuation">[</span><span class="token punctuation">]</span>balancer<span class="token punctuation">.</span>SubConn <span class="token comment">// Connections need to tear down.</span>
<span class="token punctuation">)</span>
resAddrs <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span>resolver<span class="token punctuation">.</span>Address<span class="token punctuation">]</span>Address<span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> a <span class="token operator">:=</span> <span class="token keyword">range</span> addrs <span class="token punctuation">{</span>
resAddrs<span class="token punctuation">[</span>resolver<span class="token punctuation">.</span>Address<span class="token punctuation">{</span>
Addr<span class="token punctuation">:</span>       a<span class="token punctuation">.</span>Addr<span class="token punctuation">,</span>
Type<span class="token punctuation">:</span>       resolver<span class="token punctuation">.</span>Backend<span class="token punctuation">,</span> <span class="token comment">// All addresses from balancer are all backends.</span>
ServerName<span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
Metadata<span class="token punctuation">:</span>   a<span class="token punctuation">.</span>Metadata<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token operator">=</span> a
<span class="token punctuation">}</span>
bw<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// \u65B0\u6DFB\u52A0\u7684\u5730\u5740\uFF0C\u9700\u8981\u53BB\u65B0\u5EFA\u8FDE\u63A5</span>
<span class="token keyword">for</span> a <span class="token operator">:=</span> <span class="token keyword">range</span> resAddrs <span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> ok <span class="token operator">:=</span> bw<span class="token punctuation">.</span>conns<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>
add <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>add<span class="token punctuation">,</span> a<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u8981\u88AB\u5220\u9664\u7684\u5730\u5740\uFF0C\u9700\u8981\u53BB\u5173\u95ED\u8FDE\u63A5</span>
<span class="token keyword">for</span> a<span class="token punctuation">,</span> c <span class="token operator">:=</span> <span class="token keyword">range</span> bw<span class="token punctuation">.</span>conns <span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> ok <span class="token operator">:=</span> resAddrs<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>
del <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>del<span class="token punctuation">,</span> c<span class="token punctuation">)</span>
<span class="token function">delete</span><span class="token punctuation">(</span>bw<span class="token punctuation">.</span>conns<span class="token punctuation">,</span> a<span class="token punctuation">)</span>
<span class="token comment">// Keep the state of this sc in bw.connSt until its state becomes Shutdown.</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
bw<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> a <span class="token operator">:=</span> <span class="token keyword">range</span> add <span class="token punctuation">{</span>
sc<span class="token punctuation">,</span> err <span class="token operator">:=</span> bw<span class="token punctuation">.</span>cc<span class="token punctuation">.</span><span class="token function">NewSubConn</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>resolver<span class="token punctuation">.</span>Address<span class="token punctuation">{</span>a<span class="token punctuation">}</span><span class="token punctuation">,</span> balancer<span class="token punctuation">.</span>NewSubConnOptions<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
grpclog<span class="token punctuation">.</span><span class="token function">Warningf</span><span class="token punctuation">(</span><span class="token string">&quot;Error creating connection to %v. Err: %v&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> err<span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
bw<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
bw<span class="token punctuation">.</span>conns<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">=</span> sc
bw<span class="token punctuation">.</span>connSt<span class="token punctuation">[</span>sc<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>scState<span class="token punctuation">{</span>
addr<span class="token punctuation">:</span> resAddrs<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">,</span>
s<span class="token punctuation">:</span>    connectivity<span class="token punctuation">.</span>Idle<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
bw<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
sc<span class="token punctuation">.</span><span class="token function">Connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//  \u8FD9\u4E00\u6B65\u771F\u6B63\u505A\u4E86\u8FDE\u63A5\u7684\u64CD\u4F5C\u3002</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> c <span class="token operator">:=</span> <span class="token keyword">range</span> del <span class="token punctuation">{</span>
bw<span class="token punctuation">.</span>cc<span class="token punctuation">.</span><span class="token function">RemoveSubConn</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1-35" tabindex="-1"><a class="header-anchor" href="#_1-35" aria-hidden="true">#</a> 1.35</h2><h3 id="\u57FA\u4E8E-grpc-\u7684\u670D\u52A1\u6CE8\u518C\u4E0E\u53D1\u73B0\u548C\u8D1F\u8F7D\u5747\u8861\u7684\u539F\u7406\u4E0E\u5B9E\u6218" tabindex="-1"><a class="header-anchor" href="#\u57FA\u4E8E-grpc-\u7684\u670D\u52A1\u6CE8\u518C\u4E0E\u53D1\u73B0\u548C\u8D1F\u8F7D\u5747\u8861\u7684\u539F\u7406\u4E0E\u5B9E\u6218" aria-hidden="true">#</a> \u57FA\u4E8E gRPC \u7684\u670D\u52A1\u6CE8\u518C\u4E0E\u53D1\u73B0\u548C\u8D1F\u8F7D\u5747\u8861\u7684\u539F\u7406\u4E0E\u5B9E\u6218</h3><p>https://blog.csdn.net/ra681t58cjxsgckj31/article/details/110675344</p><h3 id="grpc-\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#grpc-\u6D41\u7A0B" aria-hidden="true">#</a> gRPC \u6D41\u7A0B</h3><h4 id="dial-\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#dial-\u6D41\u7A0B" aria-hidden="true">#</a> Dial \u6D41\u7A0B</h4><ul><li><p>\u8C03\u7528 DialContext</p><ul><li><code>cc.parsedTarget = grpcutil.ParseTarget(cc.target, cc.dopts.copts.Dialer != nil)</code> \u6839\u636E\u4F20\u5165\u7684 target \u9009\u62E9 resolver</li><li>\u8C03\u7528 getResolver\uFF0C\u4F7F\u7528 parsedTarget \u4E2D\u7684 scheme \u53BB clientConn \u548C\u6CE8\u518C\u8FC7\u7684 resolver \u4E2D\u67E5\u627E builder\u3002</li></ul></li><li><p><code>rWrapper, err := newCCResolverWrapper(cc, resolverBuilder)</code> \u5728\u8FD9\u6B65\u4F7F\u7528 builder \u7684 build \u65B9\u6CD5\u6784\u5EFA resolver</p></li></ul><h4 id="fileresolver-\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#fileresolver-\u6D41\u7A0B" aria-hidden="true">#</a> fileResolver \u6D41\u7A0B</h4><ul><li>\u521B\u5EFA watcher \u534F\u7A0B\uFF0C\u5E76\u963B\u585E\u7B49\u5F85\u64CD\u4F5C\u7CFB\u7EDF\u4FE1\u53F7\uFF0C\u6216 context \u5173\u95ED\u3002 <ul><li>\u63A5\u6536\u5230\u7CFB\u7EDF\u4FE1\u53F7\u540E\uFF0C\u4F1A\u8BFB\u53D6\u5E76\u89E3\u6790 <code>/etc/containerpilot/services.json</code> \u6587\u4EF6\u4E2D\u7684\u6D3B\u8DC3\u670D\u52A1\u7AEF\u8282\u70B9\u5217\u8868\u3002</li><li>\u5BF9\u6BD4 resolver \u4E2D\u8BB0\u5F55\u7684\u6D3B\u8DC3\u8282\u70B9\uFF0C\u67E5\u627E\u51FA\u65B0\u8282\u70B9\u548C\u5931\u6548\u8282\u70B9\uFF0C\u8C03\u7528 UpdateState \u8FDB\u884C\u66F4\u65B0\u3002 <ul><li>ResolverWrapper \u4E2D\u8C03\u7528 updateResolverState <ul><li>\u9996\u6B21\u8FDB\u5165 updateResolverState \u65B9\u6CD5\u4F1A\u521D\u59CB\u5316 balanceWarpper\uFF0C\u8C03\u7528 maybeApplyDefaultServiceConfig \u540E\u8C03\u7528 applyServiceConfigAndBalancer\u3002</li><li>\u8C03\u7528 updateClientConnState</li></ul></li></ul></li></ul></li></ul><h3 id="resolver" tabindex="-1"><a class="header-anchor" href="#resolver" aria-hidden="true">#</a> resolver</h3><p>\u5F53\u6211\u4EEC\u7684\u670D\u52A1\u521A\u521A\u6210\u578B\u65F6\uFF0C\u53EF\u80FD\u4E00\u4E2A\u670D\u52A1\u53EA\u6709\u4E00\u53F0\u5B9E\u4F8B\uFF0C\u8FD9\u65F6\u5019 client \u8981\u5EFA\u7ACB grpc \u8FDE\u63A5\u5F88\u7B80\u5355\uFF0C\u53EA\u9700\u8981\u6307\u5B9A server \u7684 ip \u5C31\u53EF\u4EE5\u4E86\u3002\u4F46\u662F\uFF0C\u5F53\u670D\u52A1\u6210\u719F\u4E86\uFF0C\u4E1A\u52A1\u91CF\u5927\u4E86\uFF0C\u8FD9\u4E2A\u65F6\u5019\uFF0C\u4E00\u4E2A\u5B9E\u4F8B\u5C31\u5C31\u4E0D\u591F\u7528\u4E86\uFF0C\u6211\u4EEC\u9700\u8981\u90E8\u7F72\u4E00\u4E2A\u670D\u52A1\u96C6\u7FA4\u3002\u4E00\u4E2A\u96C6\u7FA4\u6709\u5F88\u591A\u5B9E\u4F8B\uFF0C\u4E14\u53EF\u4EE5\u968F\u65F6\u7684\u6269\u5BB9\uFF0C\u90E8\u5206\u5B9E\u4F8B\u51FA\u73B0\u4E86\u6545\u969C\u4E5F\u6CA1\u5173\u7CFB\uFF0C\u8FD9\u6837\u5C31\u63D0\u5347\u4E86\u670D\u52A1\u7684\u5904\u7406\u80FD\u529B\u548C\u7A33\u5B9A\u6027\uFF0C\u4F46\u662F\u4E5F\u5E26\u6765\u4E00\u4E2A\u95EE\u9898\uFF0Cgrpc \u7684 client\uFF0C\u5982\u4F55\u548C\u8FD9\u4E2A\u96C6\u7FA4\u91CC\u7684 server \u5EFA\u7ACB\u8FDE\u63A5\uFF1F</p><p>\u8FD9\u4E2A\u95EE\u9898\u53EF\u4EE5\u4E00\u5206\u4E3A\u4E8C\uFF0C\u7B2C\u4E00\u4E2A\u95EE\u9898\uFF1A\u5982\u4F55\u6839\u636E\u670D\u52A1\u540D\u79F0\uFF0C\u8FD4\u56DE\u5B9E\u4F8B\u7684 ip\uFF1F\u8FD9\u4E2A\u95EE\u9898\u6709\u5F88\u591A\u79CD\u89E3\u51B3\u65B9\u6848\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E9B\u6210\u719F\u7684\u670D\u52A1\u53D1\u73B0\u7EC4\u4EF6\uFF0C\u4F8B\u5982 consul \u6216\u8005 zookeeper\uFF0C\u4E5F\u53EF\u4EE5\u6211\u4EEC\u81EA\u5DF1\u5B9E\u73B0\u4E00\u4E2A\u89E3\u6790\u670D\u52A1\u5668\uFF1B\u7B2C\u4E8C\u4E2A\u95EE\u9898\uFF0C\u5982\u4F55\u5C06\u6211\u4EEC\u9009\u62E9\u7684\u670D\u52A1\u89E3\u6790\u65B9\u5F0F\u5E94\u7528\u5230 grpc \u7684\u8FDE\u63A5\u5EFA\u7ACB\u4E2D\u53BB\uFF1F\u8FD9\u4E2A\u4E5F\u4E0D\u96BE\uFF0C\u56E0\u4E3A grpc \u7684 resolver\uFF0C\u5C31\u662F\u5E2E\u6211\u4EEC\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u7684\uFF0C\u672C\u7BC7\uFF0C\u6211\u4EEC\u5C31\u6765\u63A2\u8BA8\u4E00\u4E0B\uFF0Cgrpc \u7684 resolver \u662F\u5982\u4F55\u5DE5\u4F5C\u7684\uFF0C\u4EE5\u53CA\u6211\u4EEC\u5982\u4F55\u5728\u9879\u76EE\u4E2D\uFF0C\u4F7F\u7528 resolver \u5B9E\u73B0\u670D\u52A1\u540D\u79F0\u7684\u89E3\u6790\u3002</p><h4 id="resolver-\u7684\u5DE5\u4F5C\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#resolver-\u7684\u5DE5\u4F5C\u539F\u7406" aria-hidden="true">#</a> resolver \u7684\u5DE5\u4F5C\u539F\u7406</h4><p>\u5173\u4E8E resolver\uFF0C\u6211\u4EEC\u4E3B\u8981\u6709\u4E24\u4E2A\u95EE\u9898\uFF1A</p><ul><li><p>\u7A0B\u5E8F\u542F\u52A8\u65F6\uFF0C\u5BA2\u6237\u7AEF\u662F\u5982\u4F55\u4ECE\u4E00\u4E2A\u57DF\u540D/\u670D\u52A1\u540D\uFF0C\u83B7\u53D6\u5230\u5176\u5BF9\u5E94\u7684\u5B9E\u4F8B ip\uFF0C\u7136\u540E\u4E0E\u4E4B\u5EFA\u7ACB\u8FDE\u63A5\u7684\u5462\uFF1F</p></li><li><p>\u8FD0\u884C\u8FC7\u7A0B\u4E2D\uFF0C\u5982\u679C\u540E\u7AEF\u7684\u5B9E\u4F8B\u6302\u4E86\uFF0Cgrpc \u5982\u4F55\u611F\u77E5\u5230\uFF0C\u5E76\u91CD\u65B0\u5EFA\u7ACB\u8FDE\u63A5\u5462\uFF1F</p></li></ul><p>\u63A5\u4E0B\u6765\uFF0C\u6211\u4EEC\u5C31\u6DF1\u5165\u6E90\u7801\uFF0C\u641E\u6E05\u695A\u8FD9\u4E24\u4E2A\u95EE\u9898\u3002</p><h4 id="\u542F\u52A8\u65F6\u7684\u89E3\u6790\u8FC7\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u542F\u52A8\u65F6\u7684\u89E3\u6790\u8FC7\u7A0B" aria-hidden="true">#</a> \u542F\u52A8\u65F6\u7684\u89E3\u6790\u8FC7\u7A0B</h4><p>\u6211\u4EEC\u5728\u4F7F\u7528 grpc \u7684\u65F6\u5019\uFF0C\u9996\u5148\u8981\u505A\u7684\u5C31\u662F\u8C03\u7528 Dial \u6216 DialContext \u51FD\u6570\u6765\u521D\u59CB\u5316\u4E00\u4E2A clientConn \u5BF9\u8C61\uFF0C\u800C resolver \u662F\u8FD9\u4E2A\u8FDE\u63A5\u5BF9\u8C61\u7684\u4E00\u4E2A\u91CD\u8981\u7684\u6210\u5458\uFF0C\u6240\u4EE5\u6211\u4EEC\u9996\u5148\u770B\u4E00\u770B clientConn \u5BF9\u8C61\u521B\u5EFA\u8FC7\u7A0B\u4E2D\uFF0Cresolver \u662F\u600E\u4E48\u8BBE\u7F6E\u8FDB\u53BB\u7684\u3002</p><p>\u5BA2\u6237\u7AEF\u542F\u52A8\u65F6\uFF0C\u4E00\u5B9A\u4F1A\u8C03\u7528 grpc \u7684 Dial \u6216 DialContext \u51FD\u6570\u6765\u521B\u5EFA\u8FDE\u63A5\uFF0C\u800C\u8FD9\u4E24\u4E2A\u51FD\u6570\u90FD\u9700\u8981\u4F20\u5165\u4E00\u4E2A\u540D\u4E3A target \u7684\u53C2\u6570\uFF0Ctarget\uFF0C\u5C31\u662F\u8FDE\u63A5\u7684\u76EE\u6807\uFF0C\u4E5F\u5C31\u662F server \u4E86\uFF0C\u63A5\u4E0B\u6765\uFF0C\u6211\u4EEC\u5C31\u770B\u4E00\u770B\uFF0CDialContext \u51FD\u6570\u91CC\u662F\u5982\u4F55\u5904\u7406\u8FD9\u4E2A target \u7684\u3002</p><p>\u9996\u5148\uFF0C\u521B\u5EFA\u4E86\u4E00\u4E2A clientConn \u5BF9\u8C61\uFF0C\u5E76\u628A target \u8D4B\u7ED9\u4E86\u5BF9\u8C61\u4E2D\u7684 target\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>  cc <span class="token operator">:=</span> <span class="token operator">&amp;</span>ClientConn<span class="token punctuation">{</span>
target<span class="token punctuation">:</span>            target<span class="token punctuation">,</span>
csMgr<span class="token punctuation">:</span>             <span class="token operator">&amp;</span>connectivityStateManager<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
conns<span class="token punctuation">:</span>             <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token operator">*</span>addrConn<span class="token punctuation">]</span><span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
dopts<span class="token punctuation">:</span>             <span class="token function">defaultDialOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
blockingpicker<span class="token punctuation">:</span>    <span class="token function">newPickerWrapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
czData<span class="token punctuation">:</span>            <span class="token function">new</span><span class="token punctuation">(</span>channelzData<span class="token punctuation">)</span><span class="token punctuation">,</span>
firstResolveEvent<span class="token punctuation">:</span> grpcsync<span class="token punctuation">.</span><span class="token function">NewEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\uFF0C\u5BF9\u8FD9\u4E2A target \u8FDB\u884C\u89E3\u6790</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>cc<span class="token punctuation">.</span>parsedTarget <span class="token operator">=</span> grpcutil<span class="token punctuation">.</span><span class="token function">ParseTarget</span><span class="token punctuation">(</span>cc<span class="token punctuation">.</span>target<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6211\u4EEC\u53EF\u4EE5\u770B\u770B ParseTarget \u8FD9\u4E2A\u51FD\u6570\u505A\u4E86\u4E9B\u4EC0\u4E48\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// ParseTarget splits target into a resolver.Target struct containing scheme,</span>
<span class="token comment">// authority and endpoint.</span>
<span class="token comment">//</span>
<span class="token comment">// If target is not a valid scheme://authority/endpoint, it returns {Endpoint:</span>
<span class="token comment">// target}.</span>
<span class="token keyword">func</span> <span class="token function">ParseTarget</span><span class="token punctuation">(</span>target <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>ret resolver<span class="token punctuation">.</span>Target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">var</span> ok <span class="token builtin">bool</span>
ret<span class="token punctuation">.</span>Scheme<span class="token punctuation">,</span> ret<span class="token punctuation">.</span>Endpoint<span class="token punctuation">,</span> ok <span class="token operator">=</span> <span class="token function">split2</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&quot;://&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>
<span class="token keyword">return</span> resolver<span class="token punctuation">.</span>Target<span class="token punctuation">{</span>Endpoint<span class="token punctuation">:</span> target<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
ret<span class="token punctuation">.</span>Authority<span class="token punctuation">,</span> ret<span class="token punctuation">.</span>Endpoint<span class="token punctuation">,</span> ok <span class="token operator">=</span> <span class="token function">split2</span><span class="token punctuation">(</span>ret<span class="token punctuation">.</span>Endpoint<span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>
<span class="token keyword">return</span> resolver<span class="token punctuation">.</span>Target<span class="token punctuation">{</span>Endpoint<span class="token punctuation">:</span> target<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> ret
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u8FD9\u4E2A\u51FD\u6570\u5BF9 target \u8FD9\u4E2A string \u8FDB\u884C\u4E86\u62C6\u5206\uFF0C&quot;\u{1F615}/&quot;\u524D\u9762\u7684\u662F scheme\uFF0C\u4E5F\u5C31\u662F\u89E3\u6790\u65B9\u6848\uFF0C\u540E\u9762\u7684\u53C8\u53EF\u4EE5\u5206\u4E3A authority \u548C endpoint\uFF0Cendpoint \u6BD4\u8F83\u597D\u7406\u89E3\uFF0C\u5C31\u662F\u5BF9\u7AEF\uFF0C\u4E5F\u5C31\u662F server \u7684\u4E00\u4E2A\u6807\u8BC6\uFF0Cauthority \u7684\u8BDD\uFF0C\u6211\u4EEC\u7684\u9879\u76EE\u4E2D\u5E76\u6CA1\u6709\u7528\uFF0C\u6211\u4E5F\u5E76\u4E0D\u80FD\u5B8C\u5168\u7406\u89E3\uFF0C\u6240\u4EE5\u8FD9\u91CC\u8D34\u4E0A<a href="https://github.com/grpc/grpc/blob/master/doc/naming.md" target="_blank" rel="noopener noreferrer">\u5B98\u65B9\u6587\u6863</a> \u7ED9\u51FA\u7684\u4E00\u884C\u89E3\u91CA\uFF0C\u5927\u5BB6\u81EA\u884C\u4F53\u4F1A\u53BB\u5427\u3002\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>authority indicates the DNS server to use<span class="token punctuation">,</span> although this is only supported by some implementations<span class="token punctuation">.</span><span class="token punctuation">(</span>In C<span class="token operator">-</span>core<span class="token punctuation">,</span> the <span class="token keyword">default</span> DNS resolver does not support this<span class="token punctuation">,</span> but the c<span class="token operator">-</span>ares based resolver supports specifying this in the form <span class="token string">&quot;IP:port&quot;</span><span class="token punctuation">.</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u90A3\u4E48\u89E3\u6790\u51FA\u6765\u7684 scheme \u6709\u4EC0\u4E48\u7528\u5462\uFF1F\u4E0D\u8981\u6025\uFF0C\u6211\u4EEC\u56DE\u5230 DialContext \u51FD\u6570\uFF0C\u63A5\u7740\u5F80\u4E0B\u770B\uFF1A</p><p>\u89E3\u6790\u5B8C target \u4E4B\u540E\u6267\u884C\u7684\u662F\u4E0B\u9762\u8FD9\u4E00\u53E5\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>resolverBuilder <span class="token operator">:=</span> cc<span class="token punctuation">.</span><span class="token function">getResolver</span><span class="token punctuation">(</span>cc<span class="token punctuation">.</span>parsedTarget<span class="token punctuation">.</span>Scheme<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E5F\u5C31\u662F\u5728\u6839\u636E\u89E3\u6790\u7684\u7ED3\u679C\uFF0C\u5305\u62EC scheme \u548C endpoint \u8FD9\u4E24\u4E2A\u53C2\u6570\uFF0C\u83B7\u53D6\u4E00\u4E2A resolver \u7684 builder\uFF0C\u6211\u4EEC\u6765\u770B\u770B\u83B7\u53D6\u7684\u903B\u8F91\u662F\u600E\u4E48\u6837\u7684\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>cc <span class="token operator">*</span>ClientConn<span class="token punctuation">)</span> <span class="token function">getResolver</span><span class="token punctuation">(</span>scheme <span class="token builtin">string</span><span class="token punctuation">)</span> resolver<span class="token punctuation">.</span>Builder <span class="token punctuation">{</span>
<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> rb <span class="token operator">:=</span> <span class="token keyword">range</span> cc<span class="token punctuation">.</span>dopts<span class="token punctuation">.</span>resolvers <span class="token punctuation">{</span>
<span class="token keyword">if</span> scheme <span class="token operator">==</span> rb<span class="token punctuation">.</span><span class="token function">Scheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">return</span> rb
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> resolver<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>scheme<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u5462\uFF0C\u5176\u5B9E\u5C31\u662F\u5728\u6839\u636E scheme \u8FDB\u884C\u67E5\u627E\uFF0C\u5982\u679C resolver \u5DF2\u7ECF\u5728\u8C03\u7528 DialContext \u7684\u65F6\u5019\u901A\u8FC7 opts \u53C2\u6570\u4F20\u4E86\u8FDB\u6765\uFF0C\u90A3\u6211\u4EEC\u5C31\u76F4\u63A5\u7528\uFF0C\u5426\u5219\u8C03\u7528 resolver.Get(scheme)\u53BB\u627E\uFF0C\u6211\u4EEC\u9879\u76EE\u4E2D\u5C31\u662F\u7528\u7684 resolver.Get(scheme)\uFF0C\u6240\u4EE5\u6211\u4EEC\u518D\u6765\u770B\u770B\u8FD9\u91CC\u662F\u600E\u4E48\u505A\u7684\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// Get returns the resolver builder registered with the given scheme.</span>
<span class="token comment">//</span>
<span class="token comment">// If no builder is register with the scheme, nil will be returned.</span>
<span class="token keyword">func</span> <span class="token function">Get</span><span class="token punctuation">(</span>scheme <span class="token builtin">string</span><span class="token punctuation">)</span> Builder <span class="token punctuation">{</span>
<span class="token keyword">if</span> b<span class="token punctuation">,</span> ok <span class="token operator">:=</span> m<span class="token punctuation">[</span>scheme<span class="token punctuation">]</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
<span class="token keyword">return</span> b
<span class="token punctuation">}</span>
<span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u9762\uFF0CGet \u51FD\u6570\u662F\u901A\u8FC7 m \u8FD9\u4E2A map\uFF0C\u53BB\u67E5\u627E\u6709\u6CA1\u6709 scheme \u5BF9\u5E94\u7684 resolver \u7684 builder\uFF0C\u90A3\u4E48 m \u8FD9\u4E2A map \u662F\u4EC0\u4E48\u65F6\u5019\u63D2\u5165\u7684\u503C\u5462\uFF1F\u8FD9\u4E2A\u5728 resolver \u7684 Register \u51FD\u6570\u91CC\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">Register</span><span class="token punctuation">(</span>b Builder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
m<span class="token punctuation">[</span>b<span class="token punctuation">.</span><span class="token function">Scheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> b
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u90A3\u4E48\u8C01\u4F1A\u53BB\u8C03\u7528\u8FD9\u4E2A Register \u51FD\u6570\uFF0C\u5411 map \u4E2D\u5199\u5165 resolver \u5462\uFF1F\u6709\u4E24\u4E2A\u4EBA\u4F1A\u53BB\u8C03\uFF0C\u9996\u5148\uFF0Cgrpc \u5B9E\u73B0\u4E86\u4E00\u4E2A\u9ED8\u8BA4\u7684\u89E3\u6790\u5668\uFF0C\u4E5F\u5C31\u662F&quot;passthrough&quot; \uFF0C\u8FD9\u4E2A\u770B\u540D\u5B57\u5C31\u7406\u89E3\u4E86\uFF0C\u5C31\u662F\u900F\u4F20\uFF0C\u6240\u8C13\u900F\u4F20\u5C31\u662F\uFF0C\u4EC0\u4E48\u90FD\u4E0D\u505A\uFF0C\u90A3\u4E48\u4EC0\u4E48\u65F6\u5019\u9700\u8981\u900F\u4F20\u5462\uFF1F\u5F53\u4F60\u8C03\u7528 DialContext \u7684\u65F6\u5019\uFF0C\u5982\u679C\u4F20\u5165\u7684 target \u672C\u8EAB\u5C31\u662F\u4E00\u4E2A ip+port\uFF0C\u8FD9\u4E2A\u65F6\u5019\uFF0C\u81EA\u7136\u5C31\u4E0D\u9700\u8981\u518D\u89E3\u6790\u4EC0\u4E48\u4E86\u3002\u90A3\u4E48&quot; passthrough&quot;\u5BF9\u5E94\u7684\u8FD9\u4E2A\u9ED8\u8BA4\u7684\u89E3\u6790\u5668\u662F\u4EC0\u4E48\u65F6\u5019\u6CE8\u518C\u5230 m \u8FD9\u4E2A map \u4E2D\u7684\u5462\uFF1F\u8FD9\u4E2A\u8C03\u7528\u5728 passthrough \u5305\u7684 init \u51FD\u6570\u91CC</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
resolver<span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>passthroughBuilder<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u800C grpc \u5305\u4F1A import \u8FD9\u4E2A_ &quot;google.golang.org/grpc/internal/resolver/passthrough&quot;\u5305\uFF0C\u6240\u4EE5\uFF0C&quot;passthrough&quot;\u8FD9\u4E2A\u89E3\u6790\u5668\u5728 grpc \u521D\u59CB\u5316\u7684\u65F6\u5019\u5C31\u4F1A\u88AB\u6CE8\u518C\u5230 m \u8FD9\u4E2A map \u4E2D\u3002</p><p>\u56DE\u5230\u8C01\u4F1A\u53BB\u8C03\u7528\u8FD9\u4E2A Register \u51FD\u6570\u8FD9\u4E2A\u95EE\u9898\uFF0C\u4E8B\u5B9E\u4E0A\uFF0C\u670D\u52A1\u540D\u79F0\u7684\u89E3\u6790\u4F1A\u6839\u636E\u6211\u4EEC\u9879\u76EE\u4F7F\u7528\u7684\u547D\u540D\u7CFB\u7EDF\u7684\u4E0D\u540C\uFF0C\u800C\u5B58\u5728\u591A\u79CD\u4E0D\u540C\u7684\u65B9\u6848\uFF0C\u5982\u679C\u6211\u4EEC\u662F\u4F7F\u7528 consul \u5B9E\u73B0\u670D\u52A1\u53D1\u73B0\uFF0C\u90A3\u4E48\u6211\u4EEC\u5C31\u5E0C\u671B\u6211\u4EEC\u7684\u89E3\u6790\u5668\u5B9E\u73B0\u7684\u662F\u901A\u8FC7 concul \u5BA2\u6237\u7AEF\u83B7\u53D6\u670D\u52A1\u4FE1\u606F\uFF0C\u800C\u5982\u679C\u6211\u4EEC\u7528\u7684\u662F dns \u670D\u52A1\uFF0C\u90A3\u4E48\u6211\u4EEC\u7684\u89E3\u6790\u5668\u5C31\u5E94\u8BE5\u901A\u8FC7\u6211\u4EEC\u7684 dns \u670D\u52A1\u5668\u53BB\u83B7\u53D6\u6307\u5B9A\u57DF\u540D\u5BF9\u5E94\u7684\u670D\u52A1\u5668 ip\uFF0C\u603B\u800C\u8A00\u4E4B\uFF0C\u5B9E\u73B0\u670D\u52A1\u540D\u79F0\u89E3\u6790\u7684\u65B9\u5F0F\u592A\u591A\u4E86\uFF0C\u6240\u4EE5 grpc \u65E0\u6CD5\u4E3A\u6211\u4EEC\u4E00\u4E00\u5B9E\u73B0\uFF0C\u56E0\u6B64\uFF0C\u9700\u8981\u6211\u4EEC\u81EA\u5DF1\u6839\u636E\u81EA\u5DF1\u4F7F\u7528\u7684\u547D\u540D\u7CFB\u7EDF\uFF0C\u53BB\u5B9E\u73B0\u53EF\u4EE5\u6EE1\u8DB3\u6211\u4EEC\u9879\u76EE\u9700\u6C42\u7684 resolver\uFF0C\u7136\u540E\u5C06\u5176 Register \u5230 m \u8FD9\u4E2A map \u4E2D\u6765\uFF0C\u8FD9\u4E2A\u5C31\u6D89\u53CA\u5230 resolver \u7684\u5177\u4F53\u7528\u6CD5\u4E86\uFF0C\u6211\u4EEC\u4E0B\u4E00\u8282\u518D\u8BE6\u7EC6\u8BB2\uFF0C\u8FD9\u91CC\u5148\u8BB0\u4F4F\uFF0CRegister \u8FD9\u4E2A\u51FD\u6570\uFF0C\u662F\u9700\u8981\u6211\u4EEC\u81EA\u5DF1\u5B9E\u73B0\u5B8C resolver \u53BB\u8C03\u7528\u7684\u3002</p><p>\u518D\u56DE\u5230 DialContext \u8FD9\u4E2A\u51FD\u6570\uFF0C\u5728\u901A\u8FC7 getResolver \u83B7\u53D6 resolver \u7684 builder \u4E4B\u540E\uFF0C\u5982\u679C\u7ED3\u679C\u4E3A nil\uFF0C\u4E5F\u5C31\u662F\u6CA1\u627E\u5230\uFF0C\u4F1A\u600E\u4E48\u6837\u5462\uFF1F</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>  resolverBuilder <span class="token operator">:=</span> cc<span class="token punctuation">.</span><span class="token function">getResolver</span><span class="token punctuation">(</span>cc<span class="token punctuation">.</span>parsedTarget<span class="token punctuation">.</span>Scheme<span class="token punctuation">)</span>
<span class="token keyword">if</span> resolverBuilder <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
<span class="token comment">// If resolver builder is still nil, the parsed target&#39;s scheme is</span>
<span class="token comment">// not registered. Fallback to default resolver and set Endpoint to</span>
<span class="token comment">// the original target.</span>
channelz<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span>cc<span class="token punctuation">.</span>channelzID<span class="token punctuation">,</span> <span class="token string">&quot;scheme %q not registered, fallback to default scheme&quot;</span><span class="token punctuation">,</span> cc<span class="token punctuation">.</span>parsedTarget<span class="token punctuation">.</span>Scheme<span class="token punctuation">)</span>
cc<span class="token punctuation">.</span>parsedTarget <span class="token operator">=</span> resolver<span class="token punctuation">.</span>Target<span class="token punctuation">{</span>
Scheme<span class="token punctuation">:</span>   resolver<span class="token punctuation">.</span><span class="token function">GetDefaultScheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
Endpoint<span class="token punctuation">:</span> target<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
resolverBuilder <span class="token operator">=</span> cc<span class="token punctuation">.</span><span class="token function">getResolver</span><span class="token punctuation">(</span>cc<span class="token punctuation">.</span>parsedTarget<span class="token punctuation">.</span>Scheme<span class="token punctuation">)</span>
<span class="token keyword">if</span> resolverBuilder <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;could not get resolver for default scheme: %q&quot;</span><span class="token punctuation">,</span> cc<span class="token punctuation">.</span>parsedTarget<span class="token punctuation">.</span>Scheme<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0Cscheme \u4F1A\u88AB\u8BBE\u7F6E\u4E3A\u9ED8\u8BA4\u7684 scheme\uFF0C\u8FD9\u4E2A\u9ED8\u8BA4\u7684 scheme \u53C8\u662F\u5565\u5462\uFF1F</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>defaultScheme <span class="token operator">=</span> <span class="token string">&quot;passthrough&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u662F\u7684\uFF0C\u5C31\u662F\u8FD9\u4E2A passthrough\uFF0C\u4E5F\u5C31\u662F\u8BF4\uFF0C\u6CA1\u6709\u83B7\u53D6\u5230\u5BF9\u5E94\u7684 resolver \u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u5C31\u8BA4\u4E3A\u662F\u76F4\u63A5\u4F20\u4E86 ip+port \u8FDB\u6765\uFF0C\u5C31\u4E0D\u53BB\u89E3\u6790\u5C31\u597D\u4E86\u3002</p><p>\u63A5\u4E0B\u6765\uFF0CDialContext \u51FD\u6570\u4F1A\u4F7F\u7528\u83B7\u53D6\u5230\u7684 resolver \u7684 builder\uFF0C\u6784\u5EFA\u4E00\u4E2A resolver\uFF0C\u5E76\u5C06\u5176\u8D4B\u7ED9 cc \u8FD9\u4E2A\u5BF9\u8C61\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>    <span class="token comment">// Build the resolver.</span>
rWrapper<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">newCCResolverWrapper</span><span class="token punctuation">(</span>cc<span class="token punctuation">,</span> resolverBuilder<span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;failed to build resolver: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
cc<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
cc<span class="token punctuation">.</span>resolverWrapper <span class="token operator">=</span> rWrapper
cc<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u800C\u4F7F\u7528 builder \u6784\u5EFA resolver \u7684\u65F6\u5019\u53C8\u505A\u4E86\u4EC0\u4E48\u5462\uFF1F\u6211\u4EEC\u518D\u6765\u770B\u770B newCCResolverWrapper \u51FD\u6570\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// newCCResolverWrapper uses the resolver.Builder to build a Resolver and</span>
<span class="token comment">// returns a ccResolverWrapper object which wraps the newly built resolver.</span>
<span class="token keyword">func</span> <span class="token function">newCCResolverWrapper</span><span class="token punctuation">(</span>cc <span class="token operator">*</span>ClientConn<span class="token punctuation">,</span> rb resolver<span class="token punctuation">.</span>Builder<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>ccResolverWrapper<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
ccr <span class="token operator">:=</span> <span class="token operator">&amp;</span>ccResolverWrapper<span class="token punctuation">{</span>
cc<span class="token punctuation">:</span>   cc<span class="token punctuation">,</span>
done<span class="token punctuation">:</span> grpcsync<span class="token punctuation">.</span><span class="token function">NewEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> credsClone credentials<span class="token punctuation">.</span>TransportCredentials
<span class="token keyword">if</span> creds <span class="token operator">:=</span> cc<span class="token punctuation">.</span>dopts<span class="token punctuation">.</span>copts<span class="token punctuation">.</span>TransportCredentials<span class="token punctuation">;</span> creds <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
credsClone <span class="token operator">=</span> creds<span class="token punctuation">.</span><span class="token function">Clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
rbo <span class="token operator">:=</span> resolver<span class="token punctuation">.</span>BuildOptions<span class="token punctuation">{</span>
DisableServiceConfig<span class="token punctuation">:</span> cc<span class="token punctuation">.</span>dopts<span class="token punctuation">.</span>disableServiceConfig<span class="token punctuation">,</span>
DialCreds<span class="token punctuation">:</span>            credsClone<span class="token punctuation">,</span>
CredsBundle<span class="token punctuation">:</span>          cc<span class="token punctuation">.</span>dopts<span class="token punctuation">.</span>copts<span class="token punctuation">.</span>CredsBundle<span class="token punctuation">,</span>
Dialer<span class="token punctuation">:</span>               cc<span class="token punctuation">.</span>dopts<span class="token punctuation">.</span>copts<span class="token punctuation">.</span>Dialer<span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> err <span class="token builtin">error</span>
<span class="token comment">// We need to hold the lock here while we assign to the ccr.resolver field</span>
<span class="token comment">// to guard against a data race caused by the following code path,</span>
<span class="token comment">// rb.Build--&gt;ccr.ReportError--&gt;ccr.poll--&gt;ccr.resolveNow, would end up</span>
<span class="token comment">// accessing ccr.resolver which is being assigned here.</span>
ccr<span class="token punctuation">.</span>resolverMu<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">defer</span> ccr<span class="token punctuation">.</span>resolverMu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
ccr<span class="token punctuation">.</span>resolver<span class="token punctuation">,</span> err <span class="token operator">=</span> rb<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span>cc<span class="token punctuation">.</span>parsedTarget<span class="token punctuation">,</span> ccr<span class="token punctuation">,</span> rbo<span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
<span class="token punctuation">}</span>
<span class="token keyword">return</span> ccr<span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u51FD\u6570\u6700\u91CD\u8981\u7684\u4E00\u884C\uFF0C\u5C31\u662F\u8C03\u7528\u4E86\u6211\u4EEC\u4F20\u5165\u7684 builder \u7684 Build \u65B9\u6CD5\uFF0C\u4E5F\u5C31\u662F\u8FD9\u4E00\u884C\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>ccr<span class="token punctuation">.</span>resolver<span class="token punctuation">,</span> err <span class="token operator">=</span> rb<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span>cc<span class="token punctuation">.</span>parsedTarget<span class="token punctuation">,</span> ccr<span class="token punctuation">,</span> rbo<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u9762\u8BF4\u8FC7\u4E86\uFF0C\u6211\u4EEC\u7528\u7684 resolver \u8FD8\u6709 resolver \u5BF9\u5E94\u7684 builder \u90FD\u662F\u9700\u8981\u6211\u4EEC\u81EA\u5DF1\u5B9E\u73B0\u7684\uFF0C\u6240\u4EE5 Build \u65B9\u6CD5\u91CC\u505A\u4E86\u4EC0\u4E48\uFF0C\u8FD9\u5C31\u8981\u770B\u4F60\u60F3\u8BA9\u4ED6\u505A\u4EC0\u4E48\u4E86\uFF0C\u90A3\u4E48\u6211\u4EEC\u4E00\u822C\u8981\u5728 Build \u91CC\u5B8C\u6210\u54EA\u4E9B\u5DE5\u4F5C\u5462\uFF0C\u8FD9\u4E2A\u6211\u4EEC\u4E0B\u4E00\u8282\u518D\u63A2\u8BA8\u3002</p><p>\u5230\u8FD9\u91CC\uFF0CDialContext \u51FD\u6570\u4E2D\u5173\u4E8E resolver \u7684\u90E8\u5206\u6211\u4EEC\u5C31\u770B\u5B8C\u4E86\uFF0C\u4E5F\u77E5\u9053\u4E86 ClientConn \u5BF9\u8C61\u7684 resolver \u662F\u5982\u4F55\u8BBE\u7F6E\u8FDB\u53BB\u7684\uFF0C\u4F46\u662F Dial \u51FD\u6570\u53EA\u662F\u521B\u5EFA\u4E86\u4E00\u4E2A\u62BD\u8C61\u7684\u8FDE\u63A5\uFF0C\u5B9E\u9645\u7684 http2 \u8FDE\u63A5\u5E76\u6CA1\u6709\u5728\u8FD9\u91CC\u521B\u5EFA\uFF0C\u6240\u4EE5\u6211\u4EEC\u63A5\u4E0B\u6765\u8981\u63A2\u8BA8\u7684\u5C31\u662F\uFF0C\u5B9E\u9645\u521B\u5EFA http2 \u8FDE\u63A5\u7684\u65F6\u5019\uFF0C\u662F\u5982\u4F55\u5229\u7528 resolver\uFF0C\u83B7\u53D6\u5230\u670D\u52A1\u5BF9\u5E94\u7684 ip \u7684\u3002</p><p>\u5E95\u5C42 http2 \u8FDE\u63A5\u5BF9\u5E94\u7684\u662F\u4E00\u4E2A grpc \u7684 stream\uFF0C\u800C stream \u7684\u521B\u5EFA\u6709\u4E24\u79CD\u65B9\u5F0F\uFF0C\u4E00\u79CD\u5C31\u662F\u6211\u4EEC\u4E3B\u52A8\u53BB\u521B\u5EFA\u4E00\u4E2A stream \u6C60\uFF0C\u8FD9\u6837\u5F53\u6709\u8BF7\u6C42\u9700\u8981\u53D1\u9001\u65F6\uFF0C\u6211\u4EEC\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u6211\u4EEC\u521B\u5EFA\u597D\u7684 stream\uFF0C\u5173\u4E8E stream \u6C60\u7684\u7528\u6CD5\uFF0C\u5185\u5BB9\u8F83\u591A\uFF0C\u672C\u7BC7\u5C31\u5148\u4E0D\u63A2\u8BA8\u4E86\uFF0C\u4EE5\u540E\u6211\u4F1A\u5355\u72EC\u5199\u4E00\u7BC7\u3002\u9664\u4E86\u6211\u4EEC\u81EA\u5DF1\u521B\u5EFA\uFF0C\u6211\u4EEC\u4F7F\u7528 protoc \u4E3A\u6211\u4EEC\u751F\u6210\u7684\u5BA2\u6237\u7AEF\u63A5\u53E3\u91CC\uFF0C\u4E5F\u4F1A\u4E3A\u6211\u4EEC\u5B9E\u73B0 stream \u7684\u521B\u5EFA\uFF0C\u4E5F\u5C31\u662F\u8BF4\u8FD9\u4E2A\u5B8C\u5168\u662F\u53EF\u4EE5\u4E0D\u7528\u6211\u4EEC\u81EA\u5DF1\u8D39\u5FC3\u7684\uFF0C\u6211\u4EEC\u968F\u4FBF\u770B\u4E00\u4E2A protoc \u751F\u6210\u7684\u5BA2\u6237\u7AEF\u63A5\u53E3\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>greeterClient<span class="token punctuation">)</span> <span class="token function">SayHello</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> in <span class="token operator">*</span>HelloRequest<span class="token punctuation">,</span> opts <span class="token operator">...</span>grpc<span class="token punctuation">.</span>CallOption<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>HelloReply<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
out <span class="token operator">:=</span> <span class="token function">new</span><span class="token punctuation">(</span>HelloReply<span class="token punctuation">)</span>
err <span class="token operator">:=</span> c<span class="token punctuation">.</span>cc<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token string">&quot;/helloworld.Greeter/SayHello&quot;</span><span class="token punctuation">,</span> in<span class="token punctuation">,</span> out<span class="token punctuation">,</span> opts<span class="token operator">...</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
<span class="token punctuation">}</span>
<span class="token keyword">return</span> out<span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\uFF0C\u8BF7\u6C42\u662F\u901A\u8FC7 Invoke \u51FD\u6570\u53D1\u51FA\u7684\uFF0C\u6240\u4EE5\u63A5\u7740\u770B Invoke\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>cc <span class="token operator">*</span>ClientConn<span class="token punctuation">)</span> <span class="token function">Invoke</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> method <span class="token builtin">string</span><span class="token punctuation">,</span> args<span class="token punctuation">,</span> reply <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> opts <span class="token operator">...</span>CallOption<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
<span class="token comment">// allow interceptor to see all applicable call options, which means those</span>
<span class="token comment">// configured as defaults from dial option as well as per-call options</span>
opts <span class="token operator">=</span> <span class="token function">combine</span><span class="token punctuation">(</span>cc<span class="token punctuation">.</span>dopts<span class="token punctuation">.</span>callOptions<span class="token punctuation">,</span> opts<span class="token punctuation">)</span>

<span class="token keyword">if</span> cc<span class="token punctuation">.</span>dopts<span class="token punctuation">.</span>unaryInt <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
<span class="token keyword">return</span> cc<span class="token punctuation">.</span>dopts<span class="token punctuation">.</span><span class="token function">unaryInt</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> method<span class="token punctuation">,</span> args<span class="token punctuation">,</span> reply<span class="token punctuation">,</span> cc<span class="token punctuation">,</span> invoke<span class="token punctuation">,</span> opts<span class="token operator">...</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> <span class="token function">invoke</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> method<span class="token punctuation">,</span> args<span class="token punctuation">,</span> reply<span class="token punctuation">,</span> cc<span class="token punctuation">,</span> opts<span class="token operator">...</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u6CA1\u6709\u8BBE\u7F6E\u62E6\u622A\u5668\u7684\u60C5\u51B5\u4E0B\uFF0C\u4F1A\u76F4\u63A5\u8C03 invoke\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">invoke</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> method <span class="token builtin">string</span><span class="token punctuation">,</span> req<span class="token punctuation">,</span> reply <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> cc <span class="token operator">*</span>ClientConn<span class="token punctuation">,</span> opts <span class="token operator">...</span>CallOption<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
cs<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">newClientStream</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> unaryStreamDesc<span class="token punctuation">,</span> cc<span class="token punctuation">,</span> method<span class="token punctuation">,</span> opts<span class="token operator">...</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
<span class="token keyword">return</span> err
<span class="token punctuation">}</span>
<span class="token keyword">if</span> err <span class="token operator">:=</span> cs<span class="token punctuation">.</span><span class="token function">SendMsg</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
<span class="token keyword">return</span> err
<span class="token punctuation">}</span>
<span class="token keyword">return</span> cs<span class="token punctuation">.</span><span class="token function">RecvMsg</span><span class="token punctuation">(</span>reply<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u6211\u4EEC\u770B\u5230\uFF0C\u53D1\u9001\u8BF7\u6C42\u4E4B\u524D\uFF0C\u4F1A\u5148\u521B\u5EFA\u4E00\u4E2A stream\uFF0C\u6211\u4EEC\u770B\u770B\u521B\u5EFA\u8FC7\u7A0B\u4E2D\u7684\u8C03\u7528\u8FC7\u7A0B\uFF1A</p><ul><li>newClientStream</li><li>newAttemptLocked</li><li>getTransport</li><li>pick</li><li>getReadyTransport</li><li>connect</li><li>resetTransport</li><li>tryAllAddrs</li><li>createTransport</li><li>NewClientTransport</li><li>newHTTP2Client</li></ul><p>\u8FD9\u4E2A\u8FC7\u7A0B\u770B\u7740\u8FD8\u662F\u633A\u957F\u7684\uFF0C\u6240\u4EE5\u6CA1\u6709\u9010\u4E00\u7684\u53BB\u8D34\u4EE3\u7801\uFF0C\u6CE8\u610F\u5230\u6700\u540E\uFF0C\u8C03\u7528\u4E86 newHTTP2Client\uFF0C\u8FD9\u5C31\u662F\u6211\u4EEC\u60F3\u627E\u7684\u521B\u5EFA http2 \u8FDE\u63A5\u7684\u5730\u65B9\u4E86\uFF0C\u518D\u5F80\u5E95\u5C42\u6211\u4EEC\u5C31\u6682\u4E14\u4E0D\u770B\u4E86\u3002</p><h4 id="\u8FD0\u884C\u8FC7\u7A0B\u4E2D\u7684\u66F4\u65B0\u8FC7\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u8FD0\u884C\u8FC7\u7A0B\u4E2D\u7684\u66F4\u65B0\u8FC7\u7A0B" aria-hidden="true">#</a> \u8FD0\u884C\u8FC7\u7A0B\u4E2D\u7684\u66F4\u65B0\u8FC7\u7A0B</h4><p>\u8FD9\u4E00\u5C0F\u8282\u8981\u641E\u660E\u767D\u7684\u5C31\u662F\u7B2C\u4E8C\u4E2A\u95EE\u9898\uFF1A\u540E\u7AEF\u7684\u5B9E\u4F8B\u6302\u4E86\uFF0Cclient \u5982\u4F55\u611F\u77E5\uFF0C\u5E76\u521B\u5EFA\u65B0\u7684\u8FDE\u63A5\u5462\uFF1F</p><p>\u8FD9\u8981\u4ECE\u4E0A\u4E00\u5C0F\u8282\u6700\u540E\u7ED9\u5230\u5230\u521B\u5EFA stream \u7684\u8C03\u7528\u8FC7\u7A0B\u7EE7\u7EED\u8BF4\u8D77\uFF0C\u6CE8\u610F\u5230\uFF0C\u8C03\u7528\u8FC7\u7A0B\u4E2D\uFF0C\u6709\u4E00\u4E2A\u51FD\u6570\u662F resetTransport\uFF0C\u6211\u4EEC\u6765\u770B\u770B\u8FD9\u4E2A\u51FD\u6570\u7684\u5B9E\u73B0\u3002</p><p>\u9996\u5148\uFF0C\u8FD9\u4E00\u6BB5\u5B9E\u73B0\u4E86\u8FDE\u63A5\u7684\u521B\u5EFA\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>newTr<span class="token punctuation">,</span> addr<span class="token punctuation">,</span> reconnect<span class="token punctuation">,</span> err <span class="token operator">:=</span> ac<span class="token punctuation">.</span><span class="token function">tryAllAddrs</span><span class="token punctuation">(</span>addrs<span class="token punctuation">,</span> connectDeadline<span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
<span class="token comment">// After exhausting all addresses, the addrConn enters</span>
<span class="token comment">// TRANSIENT_FAILURE.</span>
ac<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> ac<span class="token punctuation">.</span>state <span class="token operator">==</span> connectivity<span class="token punctuation">.</span>Shutdown <span class="token punctuation">{</span>
ac<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">return</span>
<span class="token punctuation">}</span>
ac<span class="token punctuation">.</span><span class="token function">updateConnectivityState</span><span class="token punctuation">(</span>connectivity<span class="token punctuation">.</span>TransientFailure<span class="token punctuation">,</span> err<span class="token punctuation">)</span>

<span class="token comment">// Backoff.</span>
b <span class="token operator">:=</span> ac<span class="token punctuation">.</span>resetBackoff
ac<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

timer <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">NewTimer</span><span class="token punctuation">(</span>backoffFor<span class="token punctuation">)</span>
<span class="token keyword">select</span> <span class="token punctuation">{</span>
<span class="token keyword">case</span> <span class="token operator">&lt;-</span>timer<span class="token punctuation">.</span>C<span class="token punctuation">:</span>
ac<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
ac<span class="token punctuation">.</span>backoffIdx<span class="token operator">++</span>
ac<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">case</span> <span class="token operator">&lt;-</span>b<span class="token punctuation">:</span>
timer<span class="token punctuation">.</span><span class="token function">Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">case</span> <span class="token operator">&lt;-</span>ac<span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
timer<span class="token punctuation">.</span><span class="token function">Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">return</span>
<span class="token punctuation">}</span>
<span class="token keyword">continue</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u8C03\u7528\u7684 tryAllAddrs \u51FD\u6570\u5F88\u597D\u7406\u89E3\uFF0C\u5C31\u662F\u628A resolver \u89E3\u6790\u7ED3\u679C\u4E2D\u7684 addr \u5168\u8BD5\u4E00\u904D\uFF0C\u77E5\u9053\u548C\u5176\u4E2D\u4E00\u4E2A addr \u6210\u529F\u5EFA\u7ACB\u8FDE\u63A5\uFF0C\u5982\u679C\u5931\u8D25\uFF0C\u4F1A\u7B49\u5F85\u4E00\u4E2A\u9000\u907F\u65F6\u95F4\uFF0C\u7136\u540E\u91CD\u8BD5\uFF0C\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u91CD\u8BD5\u7684\u65F6\u5019\uFF0C\u8981\u7ECF\u8FC7 resetTransport \u51FD\u6570\u6700\u5F00\u5934\u7684\u8FD9\u6BB5\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> i <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
ac<span class="token punctuation">.</span>cc<span class="token punctuation">.</span><span class="token function">resolveNow</span><span class="token punctuation">(</span>resolver<span class="token punctuation">.</span>ResolveNowOptions<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5982\u679C\u4E0D\u662F\u7B2C\u4E00\u6B21\u521B\u5EFA\u8FDE\u63A5\uFF0C\u5C31\u8981\u8C03\u7528 clientConn \u7684 resolveNow \u65B9\u6CD5\uFF0C\u91CD\u65B0\u83B7\u53D6\u4E00\u6B21\u89E3\u6790\u7684\u7ED3\u679C\uFF0C\u8FD9\u5F88\u91CD\u8981\uFF0C\u56E0\u4E3A\u521B\u5EFA\u8FDE\u63A5\u5931\u8D25\u7684\u539F\u56E0\u5F88\u6709\u53EF\u80FD\u5C31\u662F\u4E0A\u4E00\u6B21\u89E3\u6790\u7684\u7ED3\u679C\u5BF9\u5E94\u7684\u5B9E\u4F8B\u5DF2\u7ECF\u6302\u4E86\u3002</p><p>\u4E0A\u9762\u8BF4\u7684\u662F\u5982\u679C\u7B2C\u4E00\u6B21\u8FDE\u63A5\u5C31\u5EFA\u7ACB\u5931\u8D25\u7684\u60C5\u51B5\uFF0C\u8FD9\u79CD\u5176\u5B9E\u4E0D\u592A\u5E38\u89C1\uFF0C\u5E38\u89C1\u7684\u662F\u8FDE\u63A5\u5EFA\u7ACB\u4E4B\u540E\uFF0C\u540E\u7AEF\u7684\u670D\u52A1\u56E0\u4E3A\u7F51\u7EDC\u6545\u969C\u6216\u8005\u5347\u7EA7\u4E4B\u7C7B\u7684\u539F\u56E0\u5BFC\u81F4\u7684\u8FDE\u63A5\u65AD\u5F00\uFF0C\u8FD9\u79CD\u60C5\u51B5\u4E0B grpc \u662F\u5982\u4F55\u53D1\u73B0\u7684\u5462\uFF1F\u8981\u641E\u660E\u767D\u8FD9\u4E2A\uFF0C\u5C31\u8981\u770B\u4E0B tryAllAddrs \u51FD\u6570\u91CC\u9762\u8C03\u7528\u7684 createTransport \u51FD\u6570\u7684\u5185\u5BB9\u4E86\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>onGoAway <span class="token operator">:=</span> <span class="token keyword">func</span> <span class="token punctuation">(</span>r transport<span class="token punctuation">.</span>GoAwayReason<span class="token punctuation">)</span> <span class="token punctuation">{</span>
ac<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
ac<span class="token punctuation">.</span><span class="token function">adjustParams</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>
once<span class="token punctuation">.</span><span class="token function">Do</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">if</span> ac<span class="token punctuation">.</span>state <span class="token operator">==</span> connectivity<span class="token punctuation">.</span>Ready <span class="token punctuation">{</span>
<span class="token comment">// Prevent this SubConn from being used for new RPCs by setting its</span>
<span class="token comment">// state to Connecting.</span>
<span class="token comment">//</span>
<span class="token comment">// TODO: this should be Idle when grpc-go properly supports it.</span>
ac<span class="token punctuation">.</span><span class="token function">updateConnectivityState</span><span class="token punctuation">(</span>connectivity<span class="token punctuation">.</span>Connecting<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
ac<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
reconnect<span class="token punctuation">.</span><span class="token function">Fire</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

onClose <span class="token operator">:=</span> <span class="token keyword">func</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
ac<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
once<span class="token punctuation">.</span><span class="token function">Do</span><span class="token punctuation">(</span><span class="token keyword">func</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">if</span> ac<span class="token punctuation">.</span>state <span class="token operator">==</span> connectivity<span class="token punctuation">.</span>Ready <span class="token punctuation">{</span>
<span class="token comment">// Prevent this SubConn from being used for new RPCs by setting its</span>
<span class="token comment">// state to Connecting.</span>
<span class="token comment">//</span>
<span class="token comment">// TODO: this should be Idle when grpc-go properly supports it.</span>
ac<span class="token punctuation">.</span><span class="token function">updateConnectivityState</span><span class="token punctuation">(</span>connectivity<span class="token punctuation">.</span>Connecting<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
ac<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">close</span><span class="token punctuation">(</span>onCloseCalled<span class="token punctuation">)</span>
reconnect<span class="token punctuation">.</span><span class="token function">Fire</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u8FD9\u4E24\u6BB5\uFF0C\u5B9A\u4E49\u4E86\u8FDE\u63A5 goAway \u6216\u8005 close \u7684\u65F6\u5019\uFF0C\u8BE5\u600E\u4E48\u5904\u7406\uFF0C\u8FD9\u4E24\u4E2A\u51FD\u6570\u4F1A\u4F5C\u4E3A\u53C2\u6570\u4F20\u5165 transport.NewClientTransport \u51FD\u6570\uFF0C\u8FDB\u800C\u8BBE\u7F6E\u5230\u540E\u9762\u901A\u8FC7 newHTTP2Client \u521B\u5EFA\u7684 http2client \u5BF9\u8C61\u4E2D\uFF0C\u90A3\u4E48\u8FD9\u4E24\u4E2A\u51FD\u6570\u4F55\u65F6\u4F1A\u88AB\u89E6\u53D1\u5462\uFF1F</p><p>\u4EE5 onGoAway \u51FD\u6570\u4E3A\u4F8B\uFF0C\u6211\u4EEC\u53EF\u4EE5\u770B\u770B http2client \u7684 reader \u65B9\u6CD5\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>t <span class="token operator">*</span>http2Client<span class="token punctuation">)</span> <span class="token function">reader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">defer</span> <span class="token function">close</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>readerDone<span class="token punctuation">)</span>
<span class="token comment">// Check the validity of server preface.</span>
frame<span class="token punctuation">,</span> err <span class="token operator">:=</span> t<span class="token punctuation">.</span>framer<span class="token punctuation">.</span>fr<span class="token punctuation">.</span><span class="token function">ReadFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
t<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// this kicks off resetTransport, so must be last before return</span>
<span class="token keyword">return</span>
<span class="token punctuation">}</span>
t<span class="token punctuation">.</span>conn<span class="token punctuation">.</span><span class="token function">SetReadDeadline</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Time<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// reset deadline once we get the settings frame (we didn&#39;t time out, yay!)</span>
<span class="token keyword">if</span> t<span class="token punctuation">.</span>keepaliveEnabled <span class="token punctuation">{</span>
atomic<span class="token punctuation">.</span><span class="token function">StoreInt64</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>t<span class="token punctuation">.</span>lastRead<span class="token punctuation">,</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">UnixNano</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
sf<span class="token punctuation">,</span> ok <span class="token operator">:=</span> frame<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>http2<span class="token punctuation">.</span>SettingsFrame<span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>
t<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// this kicks off resetTransport, so must be last before return</span>
<span class="token keyword">return</span>
<span class="token punctuation">}</span>
t<span class="token punctuation">.</span><span class="token function">onPrefaceReceipt</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
t<span class="token punctuation">.</span><span class="token function">handleSettings</span><span class="token punctuation">(</span>sf<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>

<span class="token comment">// loop to keep reading incoming messages on this transport.</span>
<span class="token keyword">for</span> <span class="token punctuation">{</span>
t<span class="token punctuation">.</span>controlBuf<span class="token punctuation">.</span><span class="token function">throttle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
frame<span class="token punctuation">,</span> err <span class="token operator">:=</span> t<span class="token punctuation">.</span>framer<span class="token punctuation">.</span>fr<span class="token punctuation">.</span><span class="token function">ReadFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> t<span class="token punctuation">.</span>keepaliveEnabled <span class="token punctuation">{</span>
atomic<span class="token punctuation">.</span><span class="token function">StoreInt64</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>t<span class="token punctuation">.</span>lastRead<span class="token punctuation">,</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">UnixNano</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
<span class="token comment">// Abort an active stream if the http2.Framer returns a</span>
<span class="token comment">// http2.StreamError. This can happen only if the server&#39;s response</span>
<span class="token comment">// is malformed http2.</span>
<span class="token keyword">if</span> se<span class="token punctuation">,</span> ok <span class="token operator">:=</span> err<span class="token punctuation">.</span><span class="token punctuation">(</span>http2<span class="token punctuation">.</span>StreamError<span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
t<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
s <span class="token operator">:=</span> t<span class="token punctuation">.</span>activeStreams<span class="token punctuation">[</span>se<span class="token punctuation">.</span>StreamID<span class="token punctuation">]</span>
t<span class="token punctuation">.</span>mu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> s <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
<span class="token comment">// use error detail to provide better err message</span>
code <span class="token operator">:=</span> http2ErrConvTab<span class="token punctuation">[</span>se<span class="token punctuation">.</span>Code<span class="token punctuation">]</span>
msg <span class="token operator">:=</span> t<span class="token punctuation">.</span>framer<span class="token punctuation">.</span>fr<span class="token punctuation">.</span><span class="token function">ErrorDetail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
t<span class="token punctuation">.</span><span class="token function">closeStream</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> status<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> http2<span class="token punctuation">.</span>ErrCodeProtocol<span class="token punctuation">,</span> status<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">continue</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
<span class="token comment">// Transport error.</span>
t<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">return</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">switch</span> frame <span class="token operator">:=</span> frame<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token keyword">type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">case</span> <span class="token operator">*</span>http2<span class="token punctuation">.</span>MetaHeadersFrame<span class="token punctuation">:</span>
t<span class="token punctuation">.</span><span class="token function">operateHeaders</span><span class="token punctuation">(</span>frame<span class="token punctuation">)</span>
<span class="token keyword">case</span> <span class="token operator">*</span>http2<span class="token punctuation">.</span>DataFrame<span class="token punctuation">:</span>
t<span class="token punctuation">.</span><span class="token function">handleData</span><span class="token punctuation">(</span>frame<span class="token punctuation">)</span>
<span class="token keyword">case</span> <span class="token operator">*</span>http2<span class="token punctuation">.</span>RSTStreamFrame<span class="token punctuation">:</span>
t<span class="token punctuation">.</span><span class="token function">handleRSTStream</span><span class="token punctuation">(</span>frame<span class="token punctuation">)</span>
<span class="token keyword">case</span> <span class="token operator">*</span>http2<span class="token punctuation">.</span>SettingsFrame<span class="token punctuation">:</span>
t<span class="token punctuation">.</span><span class="token function">handleSettings</span><span class="token punctuation">(</span>frame<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token keyword">case</span> <span class="token operator">*</span>http2<span class="token punctuation">.</span>PingFrame<span class="token punctuation">:</span>
t<span class="token punctuation">.</span><span class="token function">handlePing</span><span class="token punctuation">(</span>frame<span class="token punctuation">)</span>
<span class="token keyword">case</span> <span class="token operator">*</span>http2<span class="token punctuation">.</span>GoAwayFrame<span class="token punctuation">:</span>
t<span class="token punctuation">.</span><span class="token function">handleGoAway</span><span class="token punctuation">(</span>frame<span class="token punctuation">)</span>
<span class="token keyword">case</span> <span class="token operator">*</span>http2<span class="token punctuation">.</span>WindowUpdateFrame<span class="token punctuation">:</span>
t<span class="token punctuation">.</span><span class="token function">handleWindowUpdate</span><span class="token punctuation">(</span>frame<span class="token punctuation">)</span>
<span class="token keyword">default</span><span class="token punctuation">:</span>
<span class="token function">errorf</span><span class="token punctuation">(</span><span class="token string">&quot;transport: http2Client.reader got unhandled frame type %v.&quot;</span><span class="token punctuation">,</span> frame<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0Creader \u65B9\u6CD5\u4F1A\u8BFB\u53D6\u8FDE\u63A5\u4E0A\u7684\u6240\u6709\u6D88\u606F\uFF0C\u5982\u679C\u662F GoAway \u7C7B\u578B\uFF0C\u5219\u4F1A\u8C03\u7528\u4E0A\u9762\u6211\u4EEC\u8BBE\u7F6E\u7684 onGoAway\uFF0C\u800C onGoAway \u51FD\u6570\u91CC\u7684 reconnect.Fire()\uFF0C\u4F1A\u89E6\u53D1 reconnect \u8FD9\u4E2A\u4E8B\u4EF6\uFF0C\u8FD9\u4E2A\u4E8B\u4EF6\u88AB\u89E6\u53D1\u4F1A\u600E\u4E48\u6837\u5462\uFF1F\u6211\u4EEC\u518D\u56DE\u5230 resetTransport \u51FD\u6570\uFF0C\u8FD9\u4E2A\u51FD\u6570\u5728\u8FDE\u63A5\u6210\u529F\u521B\u5EFA\u4E4B\u540E\uFF0C\u4F1A\u963B\u585E\u5728\u8FD9\u91CC\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// Block until the created transport is down. And when this happens,</span>
<span class="token comment">// we restart from the top of the addr list.</span>
<span class="token operator">&lt;-</span>reconnect<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E5F\u5C31\u662F\u8BF4\uFF0C\u51FD\u6570\u5728\u7B49\u8FD9\u4E2A\u8FDE\u63A5 goAway \u6216\u8005 close\uFF0C\u5F53\u8FD9\u4E24\u79CD\u60C5\u51B5\u53D1\u751F\u65F6\uFF0C\u7A0B\u5E8F\u5C31\u4F1A\u63A5\u7740\u8D70\uFF0C\u4E5F\u5C31\u662F\u8FDB\u5165\u4E0B\u4E00\u6B21\u5FAA\u73AF\uFF0C\u5C31\u4F1A\u91CD\u65B0\u83B7\u53D6 resolver \u7684\u7ED3\u679C\uFF0C\u7136\u540E\u5EFA\u7ACB\u8FDE\u63A5\uFF0C\u8FD9\u6837\u5C31\u8BF4\u901A\u4E86\uFF0C\u6211\u4EEC\u518D\u6765\u634B\u4E00\u4E0B\uFF1A</p><ul><li>\u9996\u5148\uFF0C\u5DF2\u7ECF\u8FDE\u63A5\u7684\u540E\u7AEF\u53D1\u751F\u4E86\u6545\u969C\uFF1B</li><li>\u7136\u540E\uFF0C\u5DF2\u7ECF\u5EFA\u7ACB\u7684 http2client \u8BFB\u5230\u4E86\u8FDE\u63A5 goAway\uFF1B</li><li>\u518D\u7136\u540E\uFF0CresetTransport \u8FDB\u5165\u4E00\u6B21\u65B0\u7684\u5FAA\u73AF\uFF0C\u91CD\u65B0\u83B7\u53D6\u89E3\u6790\u7ED3\u679C\uFF1B</li><li>\u6700\u540E\uFF0CresetTransport \u91CC\u901A\u8FC7\u65B0\u83B7\u53D6\u5230\u7684\u5730\u5740\uFF0C\u91CD\u65B0\u5EFA\u7ACB\u8FDE\u63A5</li></ul><p>\u5230\u8FD9\u91CC\uFF0C\u6211\u4EEC\u5C31\u641E\u6E05\u695A\u4E86\uFF0Cgrpc \u662F\u5982\u4F55\u4FDD\u8BC1\u8FDE\u63A5\u4E00\u76F4\u662F\u53EF\u7528\u7684\u4E86\u3002</p><h4 id="resolver-\u7684\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#resolver-\u7684\u4F7F\u7528" aria-hidden="true">#</a> resolver \u7684\u4F7F\u7528</h4><p>\u660E\u767D\u4E86\u5927\u81F4\u539F\u7406\uFF0C\u6211\u4EEC\u518D\u6765\u770B\u770B\u5982\u4F55\u4F7F\u7528\uFF0C\u5176\u5B9E\u6700\u5173\u952E\u7684\u4E00\u70B9\u5728\u4E0A\u9762\u5DF2\u7ECF\u8BF4\u8FC7\u4E86\uFF0C\u5C31\u662F\u6211\u4EEC\u81EA\u5DF1\u5B9E\u73B0\u6EE1\u8DB3\u6211\u4EEC\u81EA\u5DF1\u4E1A\u52A1\u8981\u6C42\u7684 resolver\uFF0C\u8FD9\u91CC\u6211\u5C31\u7CFB\u7EDF\u7684\u4E3E\u4E00\u4E2A\u4F8B\u5B50\u5427\u3002</p><p>\u5047\u8BBE\uFF0C\u6211\u4EEC\u540E\u7AEF\u7684\u6BCF\u4E00\u4E2A\u670D\u52A1\u90FD\u5BF9\u5E94\u4E86\u4E00\u4E2A\u57DF\u540D\uFF0C\u6BD4\u5982\u8BA2\u5355\u670D\u52A1\u662F service.order\uFF0C\u652F\u4ED8\u670D\u52A1\u662F service.payment\uFF0C\u7136\u540E\u6211\u4EEC\u81EA\u5DF1\u7684\u57DF\u540D\u89E3\u6790\u7CFB\u7EDF\u63D0\u4F9B\u4E00\u4E2A web api\uFF0Curl \u662Fhttp: //myself.dns.xyz\uFF0C\u5F53\u4F60\u60F3\u83B7\u53D6\u8BA2\u5355\u670D\u52A1\u5BF9\u5E94\u7684\u5B9E\u4F8B\u7684ip+port\u65F6\uFF0C\u53EA\u9700\u8981\u53D1\u9001\u4E00\u6761\uFF1A</p><p>GET http://myself.dns.xyz?service=service.order</p><p>\u6B27\u514B\uFF0C\u63A5\u4E0B\u6765\u6211\u4EEC\u6765\u5B9E\u73B0\u8FD9\u4E2A\u89E3\u6790\u5668\u3002</p><p>\u9996\u5148\uFF0C\u6211\u4EEC\u521B\u5EFA\u4E00\u4E2A\u5355\u72EC\u7684\u5305\uFF0C\u5C31\u53EB mydns \u5427\uFF0C\u6CE8\u610F\u5728\u8FD9\u4E2A\u5305\u91CC\uFF0C\u6211\u4EEC\u8981\u5B9E\u73B0\u4E24\u4E2A\u4E1C\u897F\uFF0C\u4E00\u4E2A\u662F resolver\uFF0C\u4E00\u4E2A\u662F resolver \u7684 builder</p><p>\u6211\u4EEC\u5148\u6765\u5B9E\u73B0 resolver\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> mydnsResolver <span class="token keyword">struct</span> <span class="token punctuation">{</span>
domain       <span class="token builtin">string</span>
port         <span class="token builtin">string</span>
address      <span class="token keyword">map</span><span class="token punctuation">[</span>resolver<span class="token punctuation">.</span>Address<span class="token punctuation">]</span><span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
ctx    context<span class="token punctuation">.</span>Context
cancel context<span class="token punctuation">.</span>CancelFunc
cc     resolver<span class="token punctuation">.</span>ClientConn
wg sync<span class="token punctuation">.</span>WaitGroup
<span class="token punctuation">}</span>

<span class="token comment">// ResolveNow resolves immediately</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>mr <span class="token operator">*</span>mydnsResolver<span class="token punctuation">)</span> <span class="token function">ResolveNow</span><span class="token punctuation">(</span>resolver<span class="token punctuation">.</span>ResolveNowOptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">select</span> <span class="token punctuation">{</span>
<span class="token keyword">case</span> mr<span class="token punctuation">.</span>rn <span class="token operator">&lt;-</span> <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">:</span>
<span class="token keyword">default</span><span class="token punctuation">:</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// Close stops resolving</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>mr <span class="token operator">*</span>mydnsResolver<span class="token punctuation">)</span> <span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
mr<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
mr<span class="token punctuation">.</span>wg<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>mr <span class="token operator">*</span>mydnsResolver<span class="token punctuation">)</span> <span class="token function">watcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">defer</span> util<span class="token punctuation">.</span><span class="token function">CheckPanic</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">defer</span> mr<span class="token punctuation">.</span>wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> <span class="token punctuation">{</span>
<span class="token keyword">select</span> <span class="token punctuation">{</span>
<span class="token keyword">case</span> <span class="token operator">&lt;-</span>mr<span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token keyword">return</span>
<span class="token keyword">case</span> <span class="token operator">&lt;-</span>mr<span class="token punctuation">.</span>rn<span class="token punctuation">:</span>
<span class="token punctuation">}</span>
result<span class="token punctuation">,</span> err <span class="token operator">:=</span> mr<span class="token punctuation">.</span><span class="token function">resolveByHttpDNS</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token operator">||</span> <span class="token function">len</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
<span class="token keyword">continue</span>
<span class="token punctuation">}</span>
mr<span class="token punctuation">.</span>cc<span class="token punctuation">.</span><span class="token function">UpdateState</span><span class="token punctuation">(</span>resolver<span class="token punctuation">.</span>State<span class="token punctuation">{</span>Addresses<span class="token punctuation">:</span> result<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>mr <span class="token operator">*</span>mydnsResolver<span class="token punctuation">)</span> <span class="token function">resolveByHttpDNS</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>resolver<span class="token punctuation">.</span>Address<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">var</span> items <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>

<span class="token comment">//\u8FD9\u91CC\u5B9E\u73B0\u901A\u8FC7\u5411http://myself.dns.xyz\u53D1\u9001get\u8BF7\u6C42\u83B7\u53D6\u5B9E\u4F8Bip\u5217\u8868\uFF0C\u5E76\u5B58\u5165items\u4E2D</span>

<span class="token keyword">var</span> addresses <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>resolver<span class="token punctuation">.</span>Address<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> items <span class="token punctuation">{</span>
addr <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">JoinHostPort</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> mr<span class="token punctuation">.</span>port<span class="token punctuation">)</span>
a <span class="token operator">:=</span> resolver<span class="token punctuation">.</span>Address<span class="token punctuation">{</span>
Addr<span class="token punctuation">:</span>       addr<span class="token punctuation">,</span>
ServerName<span class="token punctuation">:</span> addr<span class="token punctuation">,</span> <span class="token comment">// same as addr</span>
Type<span class="token punctuation">:</span>       resolver<span class="token punctuation">.</span>Backend<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
addresses <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>addresses<span class="token punctuation">,</span> a<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">return</span> addresses<span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u518D\u6765\u5B9E\u73B0 builder\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> mydnsBuilder <span class="token keyword">struct</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">NewBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> resolver<span class="token punctuation">.</span>Builder <span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token operator">&amp;</span>mydnsBuilder<span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// Scheme for mydns</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>mb <span class="token operator">*</span>mydnsBuilder<span class="token punctuation">)</span> <span class="token function">Scheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token string">&quot;mydns&quot;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Build</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>mb <span class="token operator">*</span>mydnsBuilder<span class="token punctuation">)</span> <span class="token function">Build</span><span class="token punctuation">(</span>target resolver<span class="token punctuation">.</span>Target<span class="token punctuation">,</span> cc resolver<span class="token punctuation">.</span>ClientConn<span class="token punctuation">,</span> <span class="token boolean">_</span> resolver<span class="token punctuation">.</span>BuildOptions<span class="token punctuation">)</span> <span class="token punctuation">(</span>resolver<span class="token punctuation">.</span>Resolver<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
host<span class="token punctuation">,</span> port<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">SplitHostPort</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>Endpoint<span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
host <span class="token operator">=</span> target<span class="token punctuation">.</span>Endpoint
port <span class="token operator">=</span> <span class="token string">&quot;80&quot;</span>
<span class="token punctuation">}</span>

ctx<span class="token punctuation">,</span> cancel <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">WithCancel</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
mr <span class="token operator">:=</span> <span class="token operator">&amp;</span>mydnsResolver<span class="token punctuation">{</span>
domain<span class="token punctuation">:</span>       host<span class="token punctuation">,</span>
port<span class="token punctuation">:</span>         port<span class="token punctuation">,</span>
cc<span class="token punctuation">:</span>           cc<span class="token punctuation">,</span>
rn<span class="token punctuation">:</span>           <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
address<span class="token punctuation">:</span>      <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span>resolver<span class="token punctuation">.</span>Address<span class="token punctuation">]</span><span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
mr<span class="token punctuation">.</span>ctx<span class="token punctuation">,</span> pr<span class="token punctuation">.</span>cancel <span class="token operator">=</span> ctx<span class="token punctuation">,</span> cancel

mr<span class="token punctuation">.</span>wg<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">go</span> mr<span class="token punctuation">.</span><span class="token function">watcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

mr<span class="token punctuation">.</span><span class="token function">ResolveNow</span><span class="token punctuation">(</span>resolver<span class="token punctuation">.</span>ResolveNowOptions<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">return</span> mr<span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u8FD8\u8981\u5B9E\u73B0\uFF0C\u5F53\u8FD9\u4E2A\u5305\u521D\u59CB\u5316\u65F6\uFF0C\u5C06 scheme \u6CE8\u518C\u5230 grpc \u7684\u89E3\u6790\u5668 map \u4E2D\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
resolver<span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span><span class="token function">NewBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9E\u73B0\u597D\u8FD9\u4E2A\u5305\u4E4B\u540E\uFF0C\u6211\u4EEC\u53EA\u9700\u8981\u5728\u8C03\u7528 Dial \u7684\u6587\u4EF6 import mydns \u8FD9\u4E2A\u5305\uFF0C\u5E76\u4E14\u4FDD\u8BC1\u4F20\u5165\u7684 target \u6EE1\u8DB3\u4EE5\u4E0B\u683C\u5F0F\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>mydns<span class="token punctuation">:</span> <span class="token comment">//service.order</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>grpc \u5C31\u4F1A\u4F7F\u7528\u6211\u4EEC\u5B9E\u73B0\u7684\u89E3\u6790\u5668\uFF0C\u5411\u6211\u4EEC\u81EA\u5DF1\u7684 dns \u670D\u52A1\u5668\u8BF7\u6C42\u670D\u52A1\u5BF9\u5E94\u7684 ip \u5730\u5740\u4E86\uFF0C\u5C31\u662F\u8FD9\u4E48\u7B80\u5355\uFF5E</p><p>Reference:<a href="https://blog.csdn.net/u013536232/article/details/108556544" target="_blank" rel="noopener noreferrer">grpc \u8FDB\u9636\u7BC7\u4E4B resolver</a></p><p><a href="https://blog.csdn.net/u013536232/article/details/108308504" target="_blank" rel="noopener noreferrer">grpc \u8FDB\u9636\u7BC7\u4E4B retry \u62E6\u622A\u5668</a></p><h3 id="golang-grpc-keepalive" tabindex="-1"><a class="header-anchor" href="#golang-grpc-keepalive" aria-hidden="true">#</a> golang grpc keepalive</h3><p>\u6700\u8FD1\u9047\u5230 grpc \u5BA2\u6237\u7AEF\u62A5\u9519 <code>rpc error: code = Unavailable desc = transport is closing</code> \uFF0C\u539F\u56E0\u662F\u8FDE\u63A5\u957F\u65F6\u95F4\u6CA1\u6709\u4F7F\u7528\uFF0C\u88AB\u670D\u52A1\u7AEF\u65AD\u5F00\uFF0C\u8FD9\u79CD\u60C5\u51B5\u901A\u8FC7\u7B80\u5355\u7C97\u66B4\u7684\u91CD\u8BD5\u7B56\u7565\u53EF\u4EE5\u89E3\u51B3\uFF0C\u66F4\u52A0\u4F18\u96C5\u7684\u89E3\u51B3\u65B9\u6848\u662F\u589E\u52A0\u4FDD\u6301\u8FDE\u63A5\u7B56\u7565</p><p>\u670D\u52A1\u7AEF</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">var</span> kaep <span class="token operator">=</span> keepalive<span class="token punctuation">.</span>EnforcementPolicy<span class="token punctuation">{</span>
MinTime<span class="token punctuation">:</span>             <span class="token number">5</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token comment">// If a client pings more than once every 5 seconds, terminate the connection</span>
PermitWithoutStream<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// Allow pings even when there are no active streams</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> kasp <span class="token operator">=</span> keepalive<span class="token punctuation">.</span>ServerParameters<span class="token punctuation">{</span>
MaxConnectionIdle<span class="token punctuation">:</span>     <span class="token number">15</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token comment">// If a client is idle for 15 seconds, send a GOAWAY</span>
MaxConnectionAge<span class="token punctuation">:</span>      <span class="token number">30</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token comment">// If any connection is alive for more than 30 seconds, send a GOAWAY</span>
MaxConnectionAgeGrace<span class="token punctuation">:</span> <span class="token number">5</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token comment">// Allow 5 seconds for pending RPCs to complete before forcibly closing connections</span>
Time<span class="token punctuation">:</span>                  <span class="token number">5</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token comment">// Ping the client if it is idle for 5 seconds to ensure the connection is still active</span>
Timeout<span class="token punctuation">:</span>               <span class="token number">1</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token comment">// Wait 1 second for the ping ack before assuming the connection is dead</span>
<span class="token punctuation">}</span>

server <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">NewServer</span><span class="token punctuation">(</span>grpc<span class="token punctuation">.</span><span class="token function">KeepaliveEnforcementPolicy</span><span class="token punctuation">(</span>kaep<span class="token punctuation">)</span><span class="token punctuation">,</span> grpc<span class="token punctuation">.</span><span class="token function">KeepaliveParams</span><span class="token punctuation">(</span>kasp<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BA2\u6237\u7AEF</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">var</span> kacp <span class="token operator">=</span> keepalive<span class="token punctuation">.</span>ClientParameters<span class="token punctuation">{</span>
Time<span class="token punctuation">:</span>                <span class="token number">10</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token comment">// send pings every 10 seconds if there is no activity</span>
Timeout<span class="token punctuation">:</span>             time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token comment">// wait 1 second for ping ack before considering the connection dead</span>
PermitWithoutStream<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// send pings even without active streams</span>
<span class="token punctuation">}</span>

conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token operator">*</span>addr<span class="token punctuation">,</span> grpc<span class="token punctuation">.</span><span class="token function">WithInsecure</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> grpc<span class="token punctuation">.</span><span class="token function">WithKeepaliveParams</span><span class="token punctuation">(</span>kacp<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://github.com/grpc/grpc-go/issues/3837" target="_blank" rel="noopener noreferrer">Are these WithKeepaliveParams supposed to cause a connection shutdown / affect streams</a></p><h2 id="grpc-go-\u6E90\u7801\u89E3\u6790-6-keepalive" tabindex="-1"><a class="header-anchor" href="#grpc-go-\u6E90\u7801\u89E3\u6790-6-keepalive" aria-hidden="true">#</a> grpc-go \u6E90\u7801\u89E3\u6790 6-keepalive</h2><p>https://erpeng.github.io/2019/08/15/grpc-go-keepalive/</p><h2 id="grpc-\u540D\u79F0\u53D1\u73B0\u4E0E\u8D1F\u8F7D\u5747\u8861" tabindex="-1"><a class="header-anchor" href="#grpc-\u540D\u79F0\u53D1\u73B0\u4E0E\u8D1F\u8F7D\u5747\u8861" aria-hidden="true">#</a> grpc \u540D\u79F0\u53D1\u73B0\u4E0E\u8D1F\u8F7D\u5747\u8861</h2><p>https://manguijie.top/2018/09/grpc-name-resolve-loadbalance</p><h2 id="keepalive" tabindex="-1"><a class="header-anchor" href="#keepalive" aria-hidden="true">#</a> Keepalive</h2><p>https://zhuanlan.zhihu.com/p/261047524 https://my.oschina.net/u/4325773/blog/3339284 https://segmentfault.com/a/1190000021133249 https://studygolang.com/articles/25004 https://github.com/grpc/grpc-go/issues/3837</p>`,135),o=[e];function c(i,l){return s(),a("div",null,o)}var r=n(p,[["render",c],["__file","2021-06-23-todo~grpc.html.vue"]]);export{r as default};
